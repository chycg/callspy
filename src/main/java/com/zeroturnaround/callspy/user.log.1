2020-03-23 14:57:30
--------------------
~org/apache/ibatis/demo/StudentDao.main(java.lang.String[])
~~org/apache/ibatis/session/SqlSessionFactoryBuilder.build(java.io.BufferedInputStream@7b69c6ba)
~~~org/apache/ibatis/session/SqlSessionFactoryBuilder.build(java.io.BufferedInputStream@7b69c6ba,null,null)
~~~~org/apache/ibatis/parsing/XPathParser.commonConstructor(true,null,org.apache.ibatis.builder.xml.XMLMapperEntityResolver@7cbd213e)
~~~~org/apache/ibatis/parsing/XPathParser.commonConstructor(true,null,org.apache.ibatis.builder.xml.XMLMapperEntityResolver@7cbd213e) -> void
~~~~org/apache/ibatis/parsing/XPathParser.createDocument(org.xml.sax.InputSource@2a70a3d8)
~~~~~org/apache/ibatis/builder/xml/XMLMapperEntityResolver.resolveEntity("-//mybatis.org//DTD Config 3.0//EN","http://mybatis.org/dtd/mybatis-3-config.dtd")
~~~~~~org/apache/ibatis/builder/xml/XMLMapperEntityResolver.getInputSource("org/apache/ibatis/builder/xml/mybatis-3-config.dtd","-//mybatis.org//DTD Config 3.0//EN","http://mybatis.org/dtd/mybatis-3-config.dtd")
~~~~~~~org/apache/ibatis/io/Resources.getResourceAsStream("org/apache/ibatis/builder/xml/mybatis-3-config.dtd")
~~~~~~~~org/apache/ibatis/io/Resources.getResourceAsStream(null,"org/apache/ibatis/builder/xml/mybatis-3-config.dtd")
~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getResourceAsStream("org/apache/ibatis/builder/xml/mybatis-3-config.dtd",null)
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null)
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null) -> [Ljava.lang.ClassLoader;@33b37288
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getResourceAsStream("org/apache/ibatis/builder/xml/mybatis-3-config.dtd",java.lang.ClassLoader[])
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getResourceAsStream("org/apache/ibatis/builder/xml/mybatis-3-config.dtd",java.lang.ClassLoader[]) -> java.io.BufferedInputStream@77a57272
~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getResourceAsStream("org/apache/ibatis/builder/xml/mybatis-3-config.dtd",null) -> java.io.BufferedInputStream@77a57272
~~~~~~~~org/apache/ibatis/io/Resources.getResourceAsStream(null,"org/apache/ibatis/builder/xml/mybatis-3-config.dtd") -> java.io.BufferedInputStream@77a57272
~~~~~~~org/apache/ibatis/io/Resources.getResourceAsStream("org/apache/ibatis/builder/xml/mybatis-3-config.dtd") -> java.io.BufferedInputStream@77a57272
~~~~~~org/apache/ibatis/builder/xml/XMLMapperEntityResolver.getInputSource("org/apache/ibatis/builder/xml/mybatis-3-config.dtd","-//mybatis.org//DTD Config 3.0//EN","http://mybatis.org/dtd/mybatis-3-config.dtd") -> org.xml.sax.InputSource@7181ae3f
~~~~~org/apache/ibatis/builder/xml/XMLMapperEntityResolver.resolveEntity("-//mybatis.org//DTD Config 3.0//EN","http://mybatis.org/dtd/mybatis-3-config.dtd") -> org.xml.sax.InputSource@7181ae3f
~~~~org/apache/ibatis/parsing/XPathParser.createDocument(org.xml.sax.InputSource@2a70a3d8) -> [#document: null]
~~~~org/apache/ibatis/type/JdbcType.values()
~~~~org/apache/ibatis/type/JdbcType.values() -> [Lorg.apache.ibatis.type.JdbcType;@3e77a1ed
~~~~org/apache/ibatis/io/Resources.classForName("javassist.util.proxy.ProxyFactory")
~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("javassist.util.proxy.ProxyFactory")
~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null)
~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null) -> [Ljava.lang.ClassLoader;@6a396c1e
~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("javassist.util.proxy.ProxyFactory",java.lang.ClassLoader[])
~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("javassist.util.proxy.ProxyFactory",java.lang.ClassLoader[]) -> class javassist.util.proxy.ProxyFactory
~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("javassist.util.proxy.ProxyFactory") -> class javassist.util.proxy.ProxyFactory
~~~~org/apache/ibatis/io/Resources.classForName("javassist.util.proxy.ProxyFactory") -> class javassist.util.proxy.ProxyFactory
~~~~org/apache/ibatis/type/JdbcType.values()
~~~~org/apache/ibatis/type/JdbcType.values() -> [Lorg.apache.ibatis.type.JdbcType;@516be40f
~~~~org/apache/ibatis/session/Configuration$StrictMap.conflictMessageProducer(org.apache.ibatis.session.Configuration$$Lambda$8/1541857308@1c93084c)
~~~~org/apache/ibatis/session/Configuration$StrictMap.conflictMessageProducer(org.apache.ibatis.session.Configuration$$Lambda$8/1541857308@1c93084c) -> {}
~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.setDefaultDriverClass(class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver)
~~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.lambda$0(class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver,class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver)
~~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.lambda$0(class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver,class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver) -> org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec
~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.setDefaultDriverClass(class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver) -> void
~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.lambda$0(class org.apache.ibatis.scripting.defaults.RawLanguageDriver,class org.apache.ibatis.scripting.defaults.RawLanguageDriver)
~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.lambda$0(class org.apache.ibatis.scripting.defaults.RawLanguageDriver,class org.apache.ibatis.scripting.defaults.RawLanguageDriver) -> org.apache.ibatis.scripting.defaults.RawLanguageDriver@3d680b5a
~~~~org/apache/ibatis/executor/ErrorContext.instance()
~~~~org/apache/ibatis/executor/ErrorContext.instance() -> 
~~~~org/apache/ibatis/executor/ErrorContext.resource("SQL Mapper Configuration")
~~~~org/apache/ibatis/executor/ErrorContext.resource("SQL Mapper Configuration") -> 
### The error may exist in SQL Mapper Configuration
~~~~org/apache/ibatis/session/Configuration.setVariables(null)
~~~~org/apache/ibatis/session/Configuration.setVariables(null) -> void
~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.parse()
~~~~~org/apache/ibatis/parsing/XPathParser.evalNode("/configuration")
~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([#document: null],"/configuration")
~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("/configuration",[#document: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("/configuration",[#document: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> [configuration: null]
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([configuration: null])
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([configuration: null]) -> {}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([configuration: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([configuration: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([configuration: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
	])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
	",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
	")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
	") -> 
	
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
	",null) -> 
	
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
	]) -> 
	
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([configuration: null]) -> 
	
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environments: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environments: null]) -> {default=development}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environments: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environments: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environments: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		") -> 
		
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		",null) -> 
		
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		]) -> 
		
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environments: null]) -> 
		
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mappers: null])
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mappers: null]) -> {}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mappers: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mappers: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mappers: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		
		])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		
		",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		
		")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		
		") -> 
		
		
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		
		",null) -> 
		
		
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		
		]) -> 
		
		
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mappers: null]) -> 
		
		
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null]) -> {id=development}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			") -> 
			
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null) -> 
			
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			]) -> 
			
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null]) -> 
			
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC") -> JDBC
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null) -> JDBC
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null]) -> {type=JDBC}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED") -> POOLED
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null) -> POOLED
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null]) -> {type=POOLED}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				") -> 
				
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null) -> 
				
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				]) -> 
				
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null]) -> 
				
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver") -> driver
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null) -> driver
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null) -> com.mysql.jdbc.Driver
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=driver, value=com.mysql.jdbc.Driver}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url") -> url
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null) -> url
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=url, value=jdbc:mysql://127.0.0.1:3306/test}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username") -> username
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null) -> username
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root") -> root
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null) -> root
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=username, value=root}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password") -> password
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null) -> password
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("") -> 
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null) -> 
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=password, value=}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml") -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null) -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null]) -> {resource=org/apache/ibatis/demo/StudentMapper.xml}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null]) -> null
~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([#document: null],"/configuration") -> <configuration>
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>            
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.jdbc.Driver"/>                
                <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>                
                <property name="username" value="root"/>                
                <property name="password" value=""/>                
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <mapper resource="org/apache/ibatis/demo/StudentMapper.xml"/>        
    </mappers>
</configuration>

~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environments: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environments: null]) -> {default=development}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environments: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environments: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environments: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		") -> 
		
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		",null) -> 
		
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		]) -> 
		
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environments: null]) -> 
		
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mappers: null])
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mappers: null]) -> {}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mappers: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mappers: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mappers: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		
		])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		
		",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		
		")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		
		") -> 
		
		
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		
		",null) -> 
		
		
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		
		]) -> 
		
		
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mappers: null]) -> 
		
		
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null]) -> {id=development}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			") -> 
			
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null) -> 
			
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			]) -> 
			
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null]) -> 
			
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC") -> JDBC
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null) -> JDBC
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null]) -> {type=JDBC}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED") -> POOLED
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null) -> POOLED
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null]) -> {type=POOLED}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				") -> 
				
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null) -> 
				
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				]) -> 
				
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null]) -> 
				
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver") -> driver
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null) -> driver
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null) -> com.mysql.jdbc.Driver
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=driver, value=com.mysql.jdbc.Driver}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url") -> url
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null) -> url
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=url, value=jdbc:mysql://127.0.0.1:3306/test}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username") -> username
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null) -> username
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root") -> root
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null) -> root
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=username, value=root}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password") -> password
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null) -> password
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("") -> 
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null) -> 
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=password, value=}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml") -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null) -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null]) -> {resource=org/apache/ibatis/demo/StudentMapper.xml}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null]) -> null
~~~~~org/apache/ibatis/parsing/XPathParser.evalNode("/configuration") -> <configuration>
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>            
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.jdbc.Driver"/>                
                <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>                
                <property name="username" value="root"/>                
                <property name="password" value=""/>                
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <mapper resource="org/apache/ibatis/demo/StudentMapper.xml"/>        
    </mappers>
</configuration>

~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environments: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environments: null]) -> {default=development}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environments: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environments: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environments: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		") -> 
		
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		",null) -> 
		
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		]) -> 
		
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environments: null]) -> 
		
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mappers: null])
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mappers: null]) -> {}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mappers: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mappers: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mappers: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		
		])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		
		",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		
		")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		
		") -> 
		
		
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		
		",null) -> 
		
		
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		
		]) -> 
		
		
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mappers: null]) -> 
		
		
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null]) -> {id=development}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			") -> 
			
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null) -> 
			
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			]) -> 
			
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null]) -> 
			
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC") -> JDBC
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null) -> JDBC
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null]) -> {type=JDBC}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED") -> POOLED
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null) -> POOLED
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null]) -> {type=POOLED}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				") -> 
				
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null) -> 
				
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				]) -> 
				
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null]) -> 
				
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver") -> driver
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null) -> driver
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null) -> com.mysql.jdbc.Driver
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=driver, value=com.mysql.jdbc.Driver}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url") -> url
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null) -> url
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=url, value=jdbc:mysql://127.0.0.1:3306/test}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username") -> username
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null) -> username
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root") -> root
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null) -> root
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=username, value=root}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password") -> password
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null) -> password
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("") -> 
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null) -> 
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=password, value=}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml") -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null) -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null]) -> {resource=org/apache/ibatis/demo/StudentMapper.xml}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null]) -> null
~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.parseConfiguration(<configuration>
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>            
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.jdbc.Driver"/>                
                <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>                
                <property name="username" value="root"/>                
                <property name="password" value=""/>                
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <mapper resource="org/apache/ibatis/demo/StudentMapper.xml"/>        
    </mappers>
</configuration>
)
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("properties")
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"properties")
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("properties",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("properties",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> null
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"properties") -> null
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("properties") -> null
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.propertiesElement(null)
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.propertiesElement(null) -> void
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("settings")
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"settings")
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("settings",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("settings",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> null
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"settings") -> null
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("settings") -> null
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.settingsAsProperties(null)
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.settingsAsProperties(null) -> {}
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.loadCustomVfs({})
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.loadCustomVfs({}) -> void
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.loadCustomLogImpl({})
~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass(null)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass(null) -> null
~~~~~~~org/apache/ibatis/session/Configuration.setLogImpl(null)
~~~~~~~org/apache/ibatis/session/Configuration.setLogImpl(null) -> void
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.loadCustomLogImpl({}) -> void
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("typeAliases")
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"typeAliases")
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("typeAliases",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("typeAliases",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> null
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"typeAliases") -> null
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("typeAliases") -> null
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.typeAliasesElement(null)
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.typeAliasesElement(null) -> void
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("plugins")
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"plugins")
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("plugins",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("plugins",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> null
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"plugins") -> null
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("plugins") -> null
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.pluginElement(null)
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.pluginElement(null) -> void
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("objectFactory")
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"objectFactory")
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("objectFactory",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("objectFactory",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> null
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"objectFactory") -> null
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("objectFactory") -> null
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.objectFactoryElement(null)
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.objectFactoryElement(null) -> void
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("objectWrapperFactory")
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"objectWrapperFactory")
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("objectWrapperFactory",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("objectWrapperFactory",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> null
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"objectWrapperFactory") -> null
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("objectWrapperFactory") -> null
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.objectWrapperFactoryElement(null)
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.objectWrapperFactoryElement(null) -> void
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("reflectorFactory")
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"reflectorFactory")
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("reflectorFactory",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("reflectorFactory",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> null
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"reflectorFactory") -> null
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("reflectorFactory") -> null
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.reflectorFactoryElement(null)
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.reflectorFactoryElement(null) -> void
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.settingsElement({})
~~~~~~~org/apache/ibatis/session/AutoMappingBehavior.valueOf("PARTIAL")
~~~~~~~~org/apache/ibatis/session/AutoMappingBehavior.values()
~~~~~~~~org/apache/ibatis/session/AutoMappingBehavior.values() -> [Lorg.apache.ibatis.session.AutoMappingBehavior;@393671df
~~~~~~~org/apache/ibatis/session/AutoMappingBehavior.valueOf("PARTIAL") -> PARTIAL
~~~~~~~org/apache/ibatis/session/Configuration.setAutoMappingBehavior(PARTIAL)
~~~~~~~org/apache/ibatis/session/Configuration.setAutoMappingBehavior(PARTIAL) -> void
~~~~~~~org/apache/ibatis/session/AutoMappingUnknownColumnBehavior.valueOf("NONE")
~~~~~~~~org/apache/ibatis/session/AutoMappingUnknownColumnBehavior.values()
~~~~~~~~org/apache/ibatis/session/AutoMappingUnknownColumnBehavior.values() -> [Lorg.apache.ibatis.session.AutoMappingUnknownColumnBehavior;@56620197
~~~~~~~org/apache/ibatis/session/AutoMappingUnknownColumnBehavior.valueOf("NONE") -> NONE
~~~~~~~org/apache/ibatis/session/Configuration.setAutoMappingUnknownColumnBehavior(NONE)
~~~~~~~org/apache/ibatis/session/Configuration.setAutoMappingUnknownColumnBehavior(NONE) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,true)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,true) -> true
~~~~~~~org/apache/ibatis/session/Configuration.setCacheEnabled(true)
~~~~~~~org/apache/ibatis/session/Configuration.setCacheEnabled(true) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.createInstance(null)
~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass(null)
~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass(null) -> null
~~~~~~~org/apache/ibatis/builder/BaseBuilder.createInstance(null) -> null
~~~~~~~org/apache/ibatis/session/Configuration.setProxyFactory(null)
~~~~~~~~org/apache/ibatis/io/Resources.classForName("javassist.util.proxy.ProxyFactory")
~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("javassist.util.proxy.ProxyFactory")
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null)
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null) -> [Ljava.lang.ClassLoader;@6eda5c9
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("javassist.util.proxy.ProxyFactory",java.lang.ClassLoader[])
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("javassist.util.proxy.ProxyFactory",java.lang.ClassLoader[]) -> class javassist.util.proxy.ProxyFactory
~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("javassist.util.proxy.ProxyFactory") -> class javassist.util.proxy.ProxyFactory
~~~~~~~~org/apache/ibatis/io/Resources.classForName("javassist.util.proxy.ProxyFactory") -> class javassist.util.proxy.ProxyFactory
~~~~~~~org/apache/ibatis/session/Configuration.setProxyFactory(org.apache.ibatis.executor.loader.javassist.JavassistProxyFactory@55b7a4e0) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false) -> false
~~~~~~~org/apache/ibatis/session/Configuration.setLazyLoadingEnabled(false)
~~~~~~~org/apache/ibatis/session/Configuration.setLazyLoadingEnabled(false) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false) -> false
~~~~~~~org/apache/ibatis/session/Configuration.setAggressiveLazyLoading(false)
~~~~~~~org/apache/ibatis/session/Configuration.setAggressiveLazyLoading(false) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,true)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,true) -> true
~~~~~~~org/apache/ibatis/session/Configuration.setMultipleResultSetsEnabled(true)
~~~~~~~org/apache/ibatis/session/Configuration.setMultipleResultSetsEnabled(true) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,true)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,true) -> true
~~~~~~~org/apache/ibatis/session/Configuration.setUseColumnLabel(true)
~~~~~~~org/apache/ibatis/session/Configuration.setUseColumnLabel(true) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false) -> false
~~~~~~~org/apache/ibatis/session/Configuration.setUseGeneratedKeys(false)
~~~~~~~org/apache/ibatis/session/Configuration.setUseGeneratedKeys(false) -> void
~~~~~~~org/apache/ibatis/session/ExecutorType.valueOf("SIMPLE")
~~~~~~~~org/apache/ibatis/session/ExecutorType.values()
~~~~~~~~org/apache/ibatis/session/ExecutorType.values() -> [Lorg.apache.ibatis.session.ExecutorType;@5f058f00
~~~~~~~org/apache/ibatis/session/ExecutorType.valueOf("SIMPLE") -> SIMPLE
~~~~~~~org/apache/ibatis/session/Configuration.setDefaultExecutorType(SIMPLE)
~~~~~~~org/apache/ibatis/session/Configuration.setDefaultExecutorType(SIMPLE) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.integerValueOf(null,null)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.integerValueOf(null,null) -> null
~~~~~~~org/apache/ibatis/session/Configuration.setDefaultStatementTimeout(null)
~~~~~~~org/apache/ibatis/session/Configuration.setDefaultStatementTimeout(null) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.integerValueOf(null,null)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.integerValueOf(null,null) -> null
~~~~~~~org/apache/ibatis/session/Configuration.setDefaultFetchSize(null)
~~~~~~~org/apache/ibatis/session/Configuration.setDefaultFetchSize(null) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveResultSetType(null)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveResultSetType(null) -> null
~~~~~~~org/apache/ibatis/session/Configuration.setDefaultResultSetType(null)
~~~~~~~org/apache/ibatis/session/Configuration.setDefaultResultSetType(null) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false) -> false
~~~~~~~org/apache/ibatis/session/Configuration.setMapUnderscoreToCamelCase(false)
~~~~~~~org/apache/ibatis/session/Configuration.setMapUnderscoreToCamelCase(false) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false) -> false
~~~~~~~org/apache/ibatis/session/Configuration.setSafeRowBoundsEnabled(false)
~~~~~~~org/apache/ibatis/session/Configuration.setSafeRowBoundsEnabled(false) -> void
~~~~~~~org/apache/ibatis/session/LocalCacheScope.valueOf("SESSION")
~~~~~~~~org/apache/ibatis/session/LocalCacheScope.values()
~~~~~~~~org/apache/ibatis/session/LocalCacheScope.values() -> [Lorg.apache.ibatis.session.LocalCacheScope;@1afd44cb
~~~~~~~org/apache/ibatis/session/LocalCacheScope.valueOf("SESSION") -> SESSION
~~~~~~~org/apache/ibatis/session/Configuration.setLocalCacheScope(SESSION)
~~~~~~~org/apache/ibatis/session/Configuration.setLocalCacheScope(SESSION) -> void
~~~~~~~org/apache/ibatis/type/JdbcType.valueOf("OTHER")
~~~~~~~org/apache/ibatis/type/JdbcType.valueOf("OTHER") -> OTHER
~~~~~~~org/apache/ibatis/session/Configuration.setJdbcTypeForNull(OTHER)
~~~~~~~org/apache/ibatis/session/Configuration.setJdbcTypeForNull(OTHER) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.stringSetValueOf(null,"equals,clone,hashCode,toString")
~~~~~~~org/apache/ibatis/builder/BaseBuilder.stringSetValueOf("equals,clone,hashCode,toString","equals,clone,hashCode,toString") -> [hashCode, equals, clone, toString]
~~~~~~~org/apache/ibatis/session/Configuration.setLazyLoadTriggerMethods([hashCode, equals, clone, toString])
~~~~~~~org/apache/ibatis/session/Configuration.setLazyLoadTriggerMethods([hashCode, equals, clone, toString]) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,true)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,true) -> true
~~~~~~~org/apache/ibatis/session/Configuration.setSafeResultHandlerEnabled(true)
~~~~~~~org/apache/ibatis/session/Configuration.setSafeResultHandlerEnabled(true) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass(null)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass(null) -> null
~~~~~~~org/apache/ibatis/session/Configuration.setDefaultScriptingLanguage(null)
~~~~~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.setDefaultDriverClass(class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver)
~~~~~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.setDefaultDriverClass(class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver) -> void
~~~~~~~org/apache/ibatis/session/Configuration.setDefaultScriptingLanguage(class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass(null)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass(null) -> null
~~~~~~~org/apache/ibatis/session/Configuration.setDefaultEnumTypeHandler(null)
~~~~~~~org/apache/ibatis/session/Configuration.setDefaultEnumTypeHandler(null) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false) -> false
~~~~~~~org/apache/ibatis/session/Configuration.setCallSettersOnNulls(false)
~~~~~~~org/apache/ibatis/session/Configuration.setCallSettersOnNulls(false) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,true)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,true) -> true
~~~~~~~org/apache/ibatis/session/Configuration.setUseActualParamName(true)
~~~~~~~org/apache/ibatis/session/Configuration.setUseActualParamName(true) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.booleanValueOf(null,false) -> false
~~~~~~~org/apache/ibatis/session/Configuration.setReturnInstanceForEmptyRow(false)
~~~~~~~org/apache/ibatis/session/Configuration.setReturnInstanceForEmptyRow(false) -> void
~~~~~~~org/apache/ibatis/session/Configuration.setLogPrefix(null)
~~~~~~~org/apache/ibatis/session/Configuration.setLogPrefix(null) -> void
~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass(null)
~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass(null) -> null
~~~~~~~org/apache/ibatis/session/Configuration.setConfigurationFactory(null)
~~~~~~~org/apache/ibatis/session/Configuration.setConfigurationFactory(null) -> void
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.settingsElement({}) -> void
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("environments")
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"environments")
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("environments",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("environments",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> [environments: null]
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environments: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environments: null]) -> {default=development}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environments: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environments: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environments: null]) -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		])
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		") -> 
		
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		",null) -> 
		
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		]) -> 
		
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environments: null]) -> 
		
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null]) -> {id=development}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null]) -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			])
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			") -> 
			
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null) -> 
			
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			]) -> 
			
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null]) -> 
			
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC") -> JDBC
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null) -> JDBC
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null]) -> {type=JDBC}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED") -> POOLED
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null) -> POOLED
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null]) -> {type=POOLED}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null]) -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				])
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				") -> 
				
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null) -> 
				
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				]) -> 
				
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null]) -> 
				
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver") -> driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null) -> driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null) -> com.mysql.jdbc.Driver
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=driver, value=com.mysql.jdbc.Driver}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url") -> url
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null) -> url
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=url, value=jdbc:mysql://127.0.0.1:3306/test}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username") -> username
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null) -> username
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root") -> root
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null) -> root
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=username, value=root}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password") -> password
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null) -> password
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("") -> 
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null) -> 
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=password, value=}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"environments") -> <environments default="development">
    <environment id="development">
        <transactionManager type="JDBC"/>        
        <dataSource type="POOLED">
            <property name="driver" value="com.mysql.jdbc.Driver"/>            
            <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>            
            <property name="username" value="root"/>            
            <property name="password" value=""/>            
        </dataSource>
    </environment>
</environments>

~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null]) -> {id=development}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			") -> 
			
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null) -> 
			
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			]) -> 
			
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null]) -> 
			
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC") -> JDBC
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null) -> JDBC
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null]) -> {type=JDBC}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED") -> POOLED
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null) -> POOLED
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null]) -> {type=POOLED}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				") -> 
				
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null) -> 
				
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				]) -> 
				
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null]) -> 
				
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver") -> driver
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null) -> driver
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null) -> com.mysql.jdbc.Driver
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=driver, value=com.mysql.jdbc.Driver}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url") -> url
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null) -> url
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=url, value=jdbc:mysql://127.0.0.1:3306/test}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username") -> username
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null) -> username
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root") -> root
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null) -> root
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=username, value=root}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password") -> password
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null) -> password
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("") -> 
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null) -> 
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=password, value=}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("environments") -> <environments default="development">
    <environment id="development">
        <transactionManager type="JDBC"/>        
        <dataSource type="POOLED">
            <property name="driver" value="com.mysql.jdbc.Driver"/>            
            <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>            
            <property name="username" value="root"/>            
            <property name="password" value=""/>            
        </dataSource>
    </environment>
</environments>

~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null]) -> {id=development}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			") -> 
			
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null) -> 
			
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			]) -> 
			
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null]) -> 
			
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC") -> JDBC
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null) -> JDBC
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null]) -> {type=JDBC}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED") -> POOLED
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null) -> POOLED
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null]) -> {type=POOLED}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				") -> 
				
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null) -> 
				
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				]) -> 
				
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null]) -> 
				
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver") -> driver
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null) -> driver
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null) -> com.mysql.jdbc.Driver
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=driver, value=com.mysql.jdbc.Driver}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url") -> url
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null) -> url
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=url, value=jdbc:mysql://127.0.0.1:3306/test}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username") -> username
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null) -> username
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root") -> root
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null) -> root
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=username, value=root}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password") -> password
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null) -> password
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("") -> 
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null) -> 
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=password, value=}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.environmentsElement(<environments default="development">
    <environment id="development">
        <transactionManager type="JDBC"/>        
        <dataSource type="POOLED">
            <property name="driver" value="com.mysql.jdbc.Driver"/>            
            <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>            
            <property name="username" value="root"/>            
            <property name="password" value=""/>            
        </dataSource>
    </environment>
</environments>
)
~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("default")
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("default",null)
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("default",null) -> development
~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("default") -> development
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null]) -> {id=development}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			") -> 
			
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null) -> 
			
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			]) -> 
			
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null]) -> 
			
~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("id")
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("id",null)
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("id",null) -> development
~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("id") -> development
~~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.isSpecifiedEnvironment("development")
~~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.isSpecifiedEnvironment("development") -> true
~~~~~~~org/apache/ibatis/parsing/XNode.evalNode("transactionManager")
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([environment: null],"transactionManager")
~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("transactionManager",[environment: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("transactionManager",[environment: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> [transactionManager: null]
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null])
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC") -> JDBC
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null) -> JDBC
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null]) -> {type=JDBC}
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null]) -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([environment: null],"transactionManager") -> <transactionManager type="JDBC"/>

~~~~~~~org/apache/ibatis/parsing/XNode.evalNode("transactionManager") -> <transactionManager type="JDBC"/>

~~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.transactionManagerElement(<transactionManager type="JDBC"/>
)
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("type")
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("type",null)
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("type",null) -> JDBC
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("type") -> JDBC
~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass("JDBC")
~~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveAlias("JDBC")
~~~~~~~~~~org/apache/ibatis/type/TypeAliasRegistry.resolveAlias("JDBC")
~~~~~~~~~~org/apache/ibatis/type/TypeAliasRegistry.resolveAlias("JDBC") -> class org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory
~~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveAlias("JDBC") -> class org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory
~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass("JDBC") -> class org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory
~~~~~~~~org/apache/ibatis/transaction/TransactionFactory.setProperties({})
~~~~~~~~org/apache/ibatis/transaction/TransactionFactory.setProperties({}) -> void
~~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.transactionManagerElement(<transactionManager type="JDBC"/>
) -> org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory@43195e57
~~~~~~~org/apache/ibatis/parsing/XNode.evalNode("dataSource")
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([environment: null],"dataSource")
~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("dataSource",[environment: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("dataSource",[environment: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> [dataSource: null]
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null])
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED") -> POOLED
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null) -> POOLED
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null]) -> {type=POOLED}
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null]) -> null
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				])
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null)
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				")
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				") -> 
				
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null) -> 
				
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				]) -> 
				
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null]) -> 
				
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver") -> driver
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null) -> driver
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null) -> com.mysql.jdbc.Driver
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=driver, value=com.mysql.jdbc.Driver}
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url") -> url
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null) -> url
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=url, value=jdbc:mysql://127.0.0.1:3306/test}
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username") -> username
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null) -> username
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root") -> root
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null) -> root
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=username, value=root}
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password") -> password
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null) -> password
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("") -> 
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null) -> 
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=password, value=}
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([environment: null],"dataSource") -> <dataSource type="POOLED">
    <property name="driver" value="com.mysql.jdbc.Driver"/>    
    <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>    
    <property name="username" value="root"/>    
    <property name="password" value=""/>    
</dataSource>

~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver") -> driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null) -> driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null) -> com.mysql.jdbc.Driver
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=driver, value=com.mysql.jdbc.Driver}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url") -> url
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null) -> url
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=url, value=jdbc:mysql://127.0.0.1:3306/test}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username") -> username
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null) -> username
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root") -> root
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null) -> root
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=username, value=root}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password") -> password
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null) -> password
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("") -> 
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null) -> 
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=password, value=}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.evalNode("dataSource") -> <dataSource type="POOLED">
    <property name="driver" value="com.mysql.jdbc.Driver"/>    
    <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>    
    <property name="username" value="root"/>    
    <property name="password" value=""/>    
</dataSource>

~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver") -> driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null) -> driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null) -> com.mysql.jdbc.Driver
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=driver, value=com.mysql.jdbc.Driver}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url") -> url
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null) -> url
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=url, value=jdbc:mysql://127.0.0.1:3306/test}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username") -> username
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null) -> username
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root") -> root
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null) -> root
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=username, value=root}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password") -> password
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null) -> password
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("") -> 
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null) -> 
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=password, value=}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.dataSourceElement(<dataSource type="POOLED">
    <property name="driver" value="com.mysql.jdbc.Driver"/>    
    <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>    
    <property name="username" value="root"/>    
    <property name="password" value=""/>    
</dataSource>
)
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("type")
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("type",null)
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("type",null) -> POOLED
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("type") -> POOLED
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver") -> driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null) -> driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null) -> com.mysql.jdbc.Driver
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=driver, value=com.mysql.jdbc.Driver}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url") -> url
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null) -> url
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=url, value=jdbc:mysql://127.0.0.1:3306/test}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username") -> username
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null) -> username
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root") -> root
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null) -> root
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=username, value=root}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password") -> password
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null) -> password
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("") -> 
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null) -> 
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=password, value=}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name")
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name",null)
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name",null) -> driver
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name") -> driver
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value")
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value",null)
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value",null) -> com.mysql.jdbc.Driver
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value") -> com.mysql.jdbc.Driver
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name")
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name",null)
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name",null) -> url
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name") -> url
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value")
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value",null)
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name")
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name",null)
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name",null) -> username
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name") -> username
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value")
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value",null)
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value",null) -> root
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value") -> root
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name")
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name",null)
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name",null) -> password
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("name") -> password
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value")
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value",null)
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value",null) -> 
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("value") -> 
~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass("POOLED")
~~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveAlias("POOLED")
~~~~~~~~~~org/apache/ibatis/type/TypeAliasRegistry.resolveAlias("POOLED")
~~~~~~~~~~org/apache/ibatis/type/TypeAliasRegistry.resolveAlias("POOLED") -> class org.apache.ibatis.datasource.pooled.PooledDataSourceFactory
~~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveAlias("POOLED") -> class org.apache.ibatis.datasource.pooled.PooledDataSourceFactory
~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass("POOLED") -> class org.apache.ibatis.datasource.pooled.PooledDataSourceFactory
~~~~~~~~org/apache/ibatis/logging/LogFactory.tryImplementation(org.apache.ibatis.logging.LogFactory$$Lambda$12/1112414583@10d68fcd)
~~~~~~~~~org/apache/ibatis/logging/LogFactory.useSlf4jLogging()
~~~~~~~~~~org/apache/ibatis/logging/LogFactory.setImplementation(class org.apache.ibatis.logging.slf4j.Slf4jImpl)
~~~~~~~~~~org/apache/ibatis/logging/LogFactory.setImplementation(class org.apache.ibatis.logging.slf4j.Slf4jImpl) -> void
~~~~~~~~~org/apache/ibatis/logging/LogFactory.useSlf4jLogging() -> void
~~~~~~~~org/apache/ibatis/logging/LogFactory.tryImplementation(org.apache.ibatis.logging.LogFactory$$Lambda$12/1112414583@10d68fcd) -> void
~~~~~~~~org/apache/ibatis/logging/LogFactory.tryImplementation(org.apache.ibatis.logging.LogFactory$$Lambda$13/1778629809@21b2e768)
~~~~~~~~org/apache/ibatis/logging/LogFactory.tryImplementation(org.apache.ibatis.logging.LogFactory$$Lambda$13/1778629809@21b2e768) -> void
~~~~~~~~org/apache/ibatis/logging/LogFactory.tryImplementation(org.apache.ibatis.logging.LogFactory$$Lambda$14/1462044018@5609159b)
~~~~~~~~org/apache/ibatis/logging/LogFactory.tryImplementation(org.apache.ibatis.logging.LogFactory$$Lambda$14/1462044018@5609159b) -> void
~~~~~~~~org/apache/ibatis/logging/LogFactory.tryImplementation(org.apache.ibatis.logging.LogFactory$$Lambda$15/555273695@17a7f733)
~~~~~~~~org/apache/ibatis/logging/LogFactory.tryImplementation(org.apache.ibatis.logging.LogFactory$$Lambda$15/555273695@17a7f733) -> void
~~~~~~~~org/apache/ibatis/logging/LogFactory.tryImplementation(org.apache.ibatis.logging.LogFactory$$Lambda$16/1750498848@76ed1b7c)
~~~~~~~~org/apache/ibatis/logging/LogFactory.tryImplementation(org.apache.ibatis.logging.LogFactory$$Lambda$16/1750498848@76ed1b7c) -> void
~~~~~~~~org/apache/ibatis/logging/LogFactory.tryImplementation(org.apache.ibatis.logging.LogFactory$$Lambda$17/301749835@394a2528)
~~~~~~~~org/apache/ibatis/logging/LogFactory.tryImplementation(org.apache.ibatis.logging.LogFactory$$Lambda$17/301749835@394a2528) -> void
~~~~~~~~org/apache/ibatis/logging/LogFactory.getLog(class org.apache.ibatis.datasource.pooled.PooledDataSource)
~~~~~~~~~org/apache/ibatis/logging/LogFactory.getLog("org.apache.ibatis.datasource.pooled.PooledDataSource")
~~~~~~~~~org/apache/ibatis/logging/LogFactory.getLog("org.apache.ibatis.datasource.pooled.PooledDataSource") -> org.apache.ibatis.logging.slf4j.Slf4jImpl@6236eb5f
~~~~~~~~org/apache/ibatis/logging/LogFactory.getLog(class org.apache.ibatis.datasource.pooled.PooledDataSource) -> org.apache.ibatis.logging.slf4j.Slf4jImpl@6236eb5f
~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.setProperties({password=, url=jdbc:mysql://127.0.0.1:3306/test, driver=com.mysql.jdbc.Driver, username=root})
~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.convertValue(org.apache.ibatis.reflection.MetaObject@4e268090,"password","")
~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.convertValue(org.apache.ibatis.reflection.MetaObject@4e268090,"password","") -> 
~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.setPassword("")
~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.setPassword("")
~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.setPassword("") -> void
~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.forceCloseAll()
~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.assembleConnectionTypeCode(null,null,"")
~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.assembleConnectionTypeCode(null,null,"") -> -1905561714
~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.forceCloseAll() -> void
~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.setPassword("") -> void
~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.convertValue(org.apache.ibatis.reflection.MetaObject@4e268090,"url","jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.convertValue(org.apache.ibatis.reflection.MetaObject@4e268090,"url","jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.setUrl("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.setUrl("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.setUrl("jdbc:mysql://127.0.0.1:3306/test") -> void
~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.forceCloseAll()
~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.assembleConnectionTypeCode("jdbc:mysql://127.0.0.1:3306/test",null,"")
~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.assembleConnectionTypeCode("jdbc:mysql://127.0.0.1:3306/test",null,"") -> -1694760402
~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.forceCloseAll() -> void
~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.setUrl("jdbc:mysql://127.0.0.1:3306/test") -> void
~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.convertValue(org.apache.ibatis.reflection.MetaObject@4e268090,"driver","com.mysql.jdbc.Driver")
~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.convertValue(org.apache.ibatis.reflection.MetaObject@4e268090,"driver","com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.setDriver("com.mysql.jdbc.Driver")
~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.setDriver("com.mysql.jdbc.Driver")
~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.setDriver("com.mysql.jdbc.Driver") -> void
~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.forceCloseAll()
~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.assembleConnectionTypeCode("jdbc:mysql://127.0.0.1:3306/test",null,"")
~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.assembleConnectionTypeCode("jdbc:mysql://127.0.0.1:3306/test",null,"") -> -1694760402
~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.forceCloseAll() -> void
~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.setDriver("com.mysql.jdbc.Driver") -> void
~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.convertValue(org.apache.ibatis.reflection.MetaObject@4e268090,"username","root")
~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.convertValue(org.apache.ibatis.reflection.MetaObject@4e268090,"username","root") -> root
~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.setUsername("root")
~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.setUsername("root")
~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.setUsername("root") -> void
~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.forceCloseAll()
~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.assembleConnectionTypeCode("jdbc:mysql://127.0.0.1:3306/test","root","")
~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.assembleConnectionTypeCode("jdbc:mysql://127.0.0.1:3306/test","root","") -> -1694646903
~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.forceCloseAll() -> void
~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.setUsername("root") -> void
~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.setProperties({password=, url=jdbc:mysql://127.0.0.1:3306/test, driver=com.mysql.jdbc.Driver, username=root}) -> void
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver") -> driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null) -> driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null) -> com.mysql.jdbc.Driver
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=driver, value=com.mysql.jdbc.Driver}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url") -> url
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null) -> url
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=url, value=jdbc:mysql://127.0.0.1:3306/test}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username") -> username
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null) -> username
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root") -> root
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null) -> root
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=username, value=root}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password") -> password
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null) -> password
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("") -> 
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null) -> 
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=password, value=}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.dataSourceElement(<dataSource type="POOLED">
    <property name="driver" value="com.mysql.jdbc.Driver"/>    
    <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>    
    <property name="username" value="root"/>    
    <property name="password" value=""/>    
</dataSource>
) -> org.apache.ibatis.datasource.pooled.PooledDataSourceFactory@1bb266b3
~~~~~~~org/apache/ibatis/mapping/Environment$Builder.transactionFactory(org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory@43195e57)
~~~~~~~org/apache/ibatis/mapping/Environment$Builder.transactionFactory(org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory@43195e57) -> org.apache.ibatis.mapping.Environment$Builder@2beee7ff
~~~~~~~org/apache/ibatis/mapping/Environment$Builder.dataSource(org.apache.ibatis.datasource.pooled.PooledDataSource@5136d012)
~~~~~~~org/apache/ibatis/mapping/Environment$Builder.dataSource(org.apache.ibatis.datasource.pooled.PooledDataSource@5136d012) -> org.apache.ibatis.mapping.Environment$Builder@2beee7ff
~~~~~~~org/apache/ibatis/mapping/Environment$Builder.build()
~~~~~~~org/apache/ibatis/mapping/Environment$Builder.build() -> org.apache.ibatis.mapping.Environment@e1de817
~~~~~~~org/apache/ibatis/session/Configuration.setEnvironment(org.apache.ibatis.mapping.Environment@e1de817)
~~~~~~~org/apache/ibatis/session/Configuration.setEnvironment(org.apache.ibatis.mapping.Environment@e1de817) -> void
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null]) -> {id=development}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			") -> 
			
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null) -> 
			
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			]) -> 
			
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null]) -> 
			
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC") -> JDBC
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null) -> JDBC
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null]) -> {type=JDBC}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED") -> POOLED
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null) -> POOLED
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null]) -> {type=POOLED}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				") -> 
				
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null) -> 
				
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				]) -> 
				
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null]) -> 
				
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver") -> driver
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null) -> driver
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null) -> com.mysql.jdbc.Driver
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=driver, value=com.mysql.jdbc.Driver}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url") -> url
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null) -> url
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=url, value=jdbc:mysql://127.0.0.1:3306/test}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username") -> username
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null) -> username
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root") -> root
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null) -> root
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=username, value=root}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password") -> password
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null) -> password
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("") -> 
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null) -> 
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=password, value=}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.environmentsElement(<environments default="development">
    <environment id="development">
        <transactionManager type="JDBC"/>        
        <dataSource type="POOLED">
            <property name="driver" value="com.mysql.jdbc.Driver"/>            
            <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>            
            <property name="username" value="root"/>            
            <property name="password" value=""/>            
        </dataSource>
    </environment>
</environments>
) -> void
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("databaseIdProvider")
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"databaseIdProvider")
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("databaseIdProvider",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("databaseIdProvider",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> null
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"databaseIdProvider") -> null
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("databaseIdProvider") -> null
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.databaseIdProviderElement(null)
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.databaseIdProviderElement(null) -> void
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("typeHandlers")
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"typeHandlers")
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("typeHandlers",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("typeHandlers",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> null
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"typeHandlers") -> null
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("typeHandlers") -> null
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.typeHandlerElement(null)
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.typeHandlerElement(null) -> void
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("mappers")
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"mappers")
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("mappers",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("mappers",[configuration: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> [mappers: null]
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mappers: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mappers: null]) -> {}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mappers: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mappers: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mappers: null]) -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		
		])
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		
		",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		
		")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		
		") -> 
		
		
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		
		",null) -> 
		
		
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		
		]) -> 
		
		
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mappers: null]) -> 
		
		
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null])
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null)
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml") -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null) -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null]) -> {resource=org/apache/ibatis/demo/StudentMapper.xml}
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null])
~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null]) -> null
~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([configuration: null],"mappers") -> <mappers>
    <mapper resource="org/apache/ibatis/demo/StudentMapper.xml"/>    
</mappers>

~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml") -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null) -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null]) -> {resource=org/apache/ibatis/demo/StudentMapper.xml}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.evalNode("mappers") -> <mappers>
    <mapper resource="org/apache/ibatis/demo/StudentMapper.xml"/>    
</mappers>

~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml") -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null) -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null]) -> {resource=org/apache/ibatis/demo/StudentMapper.xml}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null]) -> null
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.mapperElement(<mappers>
    <mapper resource="org/apache/ibatis/demo/StudentMapper.xml"/>    
</mappers>
)
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml") -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null) -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null]) -> {resource=org/apache/ibatis/demo/StudentMapper.xml}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resource")
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resource",null)
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resource",null) -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resource") -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("url")
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("url",null)
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("url",null) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("url") -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("class")
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("class",null)
~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("class",null) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("class") -> null
~~~~~~~org/apache/ibatis/executor/ErrorContext.instance()
~~~~~~~org/apache/ibatis/executor/ErrorContext.instance() -> 
### The error may exist in SQL Mapper Configuration
~~~~~~~org/apache/ibatis/executor/ErrorContext.resource("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~org/apache/ibatis/executor/ErrorContext.resource("org/apache/ibatis/demo/StudentMapper.xml") -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~org/apache/ibatis/io/Resources.getResourceAsStream("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~org/apache/ibatis/io/Resources.getResourceAsStream(null,"org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getResourceAsStream("org/apache/ibatis/demo/StudentMapper.xml",null)
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null)
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null) -> [Ljava.lang.ClassLoader;@52102734
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getResourceAsStream("org/apache/ibatis/demo/StudentMapper.xml",java.lang.ClassLoader[])
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getResourceAsStream("org/apache/ibatis/demo/StudentMapper.xml",java.lang.ClassLoader[]) -> java.io.BufferedInputStream@3541cb24
~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getResourceAsStream("org/apache/ibatis/demo/StudentMapper.xml",null) -> java.io.BufferedInputStream@3541cb24
~~~~~~~~org/apache/ibatis/io/Resources.getResourceAsStream(null,"org/apache/ibatis/demo/StudentMapper.xml") -> java.io.BufferedInputStream@3541cb24
~~~~~~~org/apache/ibatis/io/Resources.getResourceAsStream("org/apache/ibatis/demo/StudentMapper.xml") -> java.io.BufferedInputStream@3541cb24
~~~~~~~org/apache/ibatis/parsing/XPathParser.commonConstructor(true,null,org.apache.ibatis.builder.xml.XMLMapperEntityResolver@429bffaa)
~~~~~~~org/apache/ibatis/parsing/XPathParser.commonConstructor(true,null,org.apache.ibatis.builder.xml.XMLMapperEntityResolver@429bffaa) -> void
~~~~~~~org/apache/ibatis/parsing/XPathParser.createDocument(org.xml.sax.InputSource@5403f35f)
~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperEntityResolver.resolveEntity("-//mybatis.org//DTD Mapper 3.0//EN","http://mybatis.org/dtd/mybatis-3-mapper.dtd")
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperEntityResolver.getInputSource("org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd","-//mybatis.org//DTD Mapper 3.0//EN","http://mybatis.org/dtd/mybatis-3-mapper.dtd")
~~~~~~~~~~org/apache/ibatis/io/Resources.getResourceAsStream("org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd")
~~~~~~~~~~~org/apache/ibatis/io/Resources.getResourceAsStream(null,"org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd")
~~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getResourceAsStream("org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd",null)
~~~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null)
~~~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null) -> [Ljava.lang.ClassLoader;@483f6d77
~~~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getResourceAsStream("org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd",java.lang.ClassLoader[])
~~~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getResourceAsStream("org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd",java.lang.ClassLoader[]) -> java.io.BufferedInputStream@7e5afaa6
~~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getResourceAsStream("org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd",null) -> java.io.BufferedInputStream@7e5afaa6
~~~~~~~~~~~org/apache/ibatis/io/Resources.getResourceAsStream(null,"org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd") -> java.io.BufferedInputStream@7e5afaa6
~~~~~~~~~~org/apache/ibatis/io/Resources.getResourceAsStream("org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd") -> java.io.BufferedInputStream@7e5afaa6
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperEntityResolver.getInputSource("org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd","-//mybatis.org//DTD Mapper 3.0//EN","http://mybatis.org/dtd/mybatis-3-mapper.dtd") -> org.xml.sax.InputSource@63a12c68
~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperEntityResolver.resolveEntity("-//mybatis.org//DTD Mapper 3.0//EN","http://mybatis.org/dtd/mybatis-3-mapper.dtd") -> org.xml.sax.InputSource@63a12c68
~~~~~~~org/apache/ibatis/parsing/XPathParser.createDocument(org.xml.sax.InputSource@5403f35f) -> [#document: null]
~~~~~~~org/apache/ibatis/executor/ErrorContext.instance()
~~~~~~~org/apache/ibatis/executor/ErrorContext.instance() -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~org/apache/ibatis/executor/ErrorContext.resource("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~org/apache/ibatis/executor/ErrorContext.resource("org/apache/ibatis/demo/StudentMapper.xml") -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.parse()
~~~~~~~~org/apache/ibatis/session/Configuration.isResourceLoaded("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~org/apache/ibatis/session/Configuration.isResourceLoaded("org/apache/ibatis/demo/StudentMapper.xml") -> false
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode("/mapper")
~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([#document: null],"/mapper")
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("/mapper",[#document: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("/mapper",[#document: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> [mapper: null]
~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null])
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org.apache.ibatis.demo.StudentMapper",null)
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org.apache.ibatis.demo.StudentMapper")
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org.apache.ibatis.demo.StudentMapper") -> org.apache.ibatis.demo.StudentMapper
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org.apache.ibatis.demo.StudentMapper",null) -> org.apache.ibatis.demo.StudentMapper
~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null]) -> {namespace=org.apache.ibatis.demo.StudentMapper}
~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null])
~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null])
~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null]) -> null
~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
	])
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
	",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
	")
~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
	") -> 
	
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
	",null) -> 
	
~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
	]) -> 
	
~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null]) -> 
	
~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([select: null])
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("getStudent",null)
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("getStudent")
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("getStudent") -> getStudent
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("getStudent",null) -> getStudent
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org.apache.ibatis.demo.Student",null)
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org.apache.ibatis.demo.Student")
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org.apache.ibatis.demo.Student") -> org.apache.ibatis.demo.Student
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org.apache.ibatis.demo.Student",null) -> org.apache.ibatis.demo.Student
~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([select: null]) -> {resultType=org.apache.ibatis.demo.Student, id=getStudent}
~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([select: null])
~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([select: null])
~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([select: null]) -> null
~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		select * from student where id = #{id}
	])
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		select * from student where id = #{id}
	",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	")
~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	") -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		select * from student where id = #{id}
	",null) -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		select * from student where id = #{id}
	]) -> 
		select * from student where id = #{id}
	
~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([select: null]) -> 
		select * from student where id = #{id}
	
~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([#document: null],"/mapper") -> <mapper namespace="org.apache.ibatis.demo.StudentMapper">
    <select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
</mapper>

~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([select: null])
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("getStudent",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("getStudent")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("getStudent") -> getStudent
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("getStudent",null) -> getStudent
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org.apache.ibatis.demo.Student",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org.apache.ibatis.demo.Student")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org.apache.ibatis.demo.Student") -> org.apache.ibatis.demo.Student
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org.apache.ibatis.demo.Student",null) -> org.apache.ibatis.demo.Student
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([select: null]) -> {resultType=org.apache.ibatis.demo.Student, id=getStudent}
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([select: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([select: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([select: null]) -> null
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		select * from student where id = #{id}
	])
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		select * from student where id = #{id}
	",null)
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	")
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	") -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		select * from student where id = #{id}
	",null) -> 
		select * from student where id = #{id}
	
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		select * from student where id = #{id}
	]) -> 
		select * from student where id = #{id}
	
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([select: null]) -> 
		select * from student where id = #{id}
	
~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode("/mapper") -> <mapper namespace="org.apache.ibatis.demo.StudentMapper">
    <select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
</mapper>

~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([select: null])
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("getStudent",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("getStudent")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("getStudent") -> getStudent
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("getStudent",null) -> getStudent
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org.apache.ibatis.demo.Student",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org.apache.ibatis.demo.Student")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org.apache.ibatis.demo.Student") -> org.apache.ibatis.demo.Student
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org.apache.ibatis.demo.Student",null) -> org.apache.ibatis.demo.Student
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([select: null]) -> {resultType=org.apache.ibatis.demo.Student, id=getStudent}
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([select: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([select: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([select: null]) -> null
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		select * from student where id = #{id}
	])
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		select * from student where id = #{id}
	",null)
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	")
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	") -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		select * from student where id = #{id}
	",null) -> 
		select * from student where id = #{id}
	
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		select * from student where id = #{id}
	]) -> 
		select * from student where id = #{id}
	
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([select: null]) -> 
		select * from student where id = #{id}
	
~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.configurationElement(<mapper namespace="org.apache.ibatis.demo.StudentMapper">
    <select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
</mapper>
)
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("namespace")
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("namespace",null)
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("namespace",null) -> org.apache.ibatis.demo.StudentMapper
~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("namespace") -> org.apache.ibatis.demo.StudentMapper
~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.setCurrentNamespace("org.apache.ibatis.demo.StudentMapper")
~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.setCurrentNamespace("org.apache.ibatis.demo.StudentMapper") -> void
~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNode("cache-ref")
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([mapper: null],"cache-ref")
~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("cache-ref",[mapper: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("cache-ref",[mapper: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> null
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([mapper: null],"cache-ref") -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNode("cache-ref") -> null
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.cacheRefElement(null)
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.cacheRefElement(null) -> void
~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNode("cache")
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([mapper: null],"cache")
~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("cache",[mapper: null],{http://www.w3.org/1999/XSL/Transform}NODE)
~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("cache",[mapper: null],{http://www.w3.org/1999/XSL/Transform}NODE) -> null
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNode([mapper: null],"cache") -> null
~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNode("cache") -> null
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.cacheElement(null)
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.cacheElement(null) -> void
~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNodes("/mapper/parameterMap")
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNodes([mapper: null],"/mapper/parameterMap")
~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("/mapper/parameterMap",[mapper: null],{http://www.w3.org/1999/XSL/Transform}NODESET)
~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("/mapper/parameterMap",[mapper: null],{http://www.w3.org/1999/XSL/Transform}NODESET) -> com.sun.org.apache.xml.internal.dtm.ref.DTMNodeList@71238fc2
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNodes([mapper: null],"/mapper/parameterMap") -> []
~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNodes("/mapper/parameterMap") -> []
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.parameterMapElement([])
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.parameterMapElement([]) -> void
~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNodes("/mapper/resultMap")
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNodes([mapper: null],"/mapper/resultMap")
~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("/mapper/resultMap",[mapper: null],{http://www.w3.org/1999/XSL/Transform}NODESET)
~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("/mapper/resultMap",[mapper: null],{http://www.w3.org/1999/XSL/Transform}NODESET) -> com.sun.org.apache.xml.internal.dtm.ref.DTMNodeList@2a54a73f
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNodes([mapper: null],"/mapper/resultMap") -> []
~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNodes("/mapper/resultMap") -> []
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.resultMapElements([])
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.resultMapElements([]) -> void
~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNodes("/mapper/sql")
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNodes([mapper: null],"/mapper/sql")
~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("/mapper/sql",[mapper: null],{http://www.w3.org/1999/XSL/Transform}NODESET)
~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("/mapper/sql",[mapper: null],{http://www.w3.org/1999/XSL/Transform}NODESET) -> com.sun.org.apache.xml.internal.dtm.ref.DTMNodeList@16a0ee18
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNodes([mapper: null],"/mapper/sql") -> []
~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNodes("/mapper/sql") -> []
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.sqlElement([])
~~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.sqlElement([],null)
~~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.sqlElement([],null) -> void
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.sqlElement([]) -> void
~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNodes("select|insert|update|delete")
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNodes([mapper: null],"select|insert|update|delete")
~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("select|insert|update|delete",[mapper: null],{http://www.w3.org/1999/XSL/Transform}NODESET)
~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("select|insert|update|delete",[mapper: null],{http://www.w3.org/1999/XSL/Transform}NODESET) -> com.sun.org.apache.xml.internal.dtm.ref.DTMNodeList@bd4dc25
~~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([select: null])
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("getStudent",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("getStudent")
~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("getStudent") -> getStudent
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("getStudent",null) -> getStudent
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org.apache.ibatis.demo.Student",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org.apache.ibatis.demo.Student")
~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org.apache.ibatis.demo.Student") -> org.apache.ibatis.demo.Student
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org.apache.ibatis.demo.Student",null) -> org.apache.ibatis.demo.Student
~~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([select: null]) -> {resultType=org.apache.ibatis.demo.Student, id=getStudent}
~~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([select: null])
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([select: null])
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([select: null]) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		select * from student where id = #{id}
	])
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		select * from student where id = #{id}
	",null)
~~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	")
~~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	") -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		select * from student where id = #{id}
	",null) -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		select * from student where id = #{id}
	]) -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([select: null]) -> 
		select * from student where id = #{id}
	
~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNodes([mapper: null],"select|insert|update|delete") -> [<select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
]
~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNodes("select|insert|update|delete") -> [<select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
]
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.buildStatementFromContext([<select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
])
~~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.buildStatementFromContext([<select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
],null)
~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLStatementBuilder.parseStatementNode()
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("id")
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("id",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("id",null) -> getStudent
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("id") -> getStudent
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("databaseId")
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("databaseId",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("databaseId",null) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("databaseId") -> null
~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLStatementBuilder.databaseIdMatchesCurrent("getStudent",null,null)
~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.applyCurrentNamespace("getStudent",false)
~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.applyCurrentNamespace("getStudent",false) -> org.apache.ibatis.demo.StudentMapper.getStudent
~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.hasStatement("org.apache.ibatis.demo.StudentMapper.getStudent",false)
~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.hasStatement("org.apache.ibatis.demo.StudentMapper.getStudent",false) -> false
~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLStatementBuilder.databaseIdMatchesCurrent("org.apache.ibatis.demo.StudentMapper.getStudent",null,null) -> true
~~~~~~~~~~~~org/apache/ibatis/mapping/SqlCommandType.valueOf("SELECT")
~~~~~~~~~~~~~org/apache/ibatis/mapping/SqlCommandType.values()
~~~~~~~~~~~~~org/apache/ibatis/mapping/SqlCommandType.values() -> [Lorg.apache.ibatis.mapping.SqlCommandType;@47faa49c
~~~~~~~~~~~~org/apache/ibatis/mapping/SqlCommandType.valueOf("SELECT") -> SELECT
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBooleanAttribute("flushCache",false)
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBooleanAttribute("flushCache",false) -> false
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBooleanAttribute("useCache",true)
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBooleanAttribute("useCache",true) -> true
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBooleanAttribute("resultOrdered",false)
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBooleanAttribute("resultOrdered",false) -> false
~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLIncludeTransformer.applyIncludes([select: null])
~~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLIncludeTransformer.applyIncludes([select: null],{},false)
~~~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLIncludeTransformer.applyIncludes([#text: 
		select * from student where id = #{id}
	],{},false)
~~~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLIncludeTransformer.applyIncludes([#text: 
		select * from student where id = #{id}
	],{},false) -> void
~~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLIncludeTransformer.applyIncludes([select: null],{},false) -> void
~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLIncludeTransformer.applyIncludes([select: null]) -> void
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("parameterType")
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("parameterType",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("parameterType",null) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("parameterType") -> null
~~~~~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass(null)
~~~~~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass(null) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("lang")
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("lang",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("lang",null) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("lang") -> null
~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLStatementBuilder.getLanguageDriver(null)
~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.getLanguageDriver(null)
~~~~~~~~~~~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.getDriver(class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver)
~~~~~~~~~~~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.getDriver(class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver) -> org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec
~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.getLanguageDriver(null) -> org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec
~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLStatementBuilder.getLanguageDriver(null) -> org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec
~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLStatementBuilder.processSelectKeyNodes("getStudent",null,org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNodes("selectKey")
~~~~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNodes([select: null],"selectKey")
~~~~~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("selectKey",[select: null],{http://www.w3.org/1999/XSL/Transform}NODESET)
~~~~~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evaluate("selectKey",[select: null],{http://www.w3.org/1999/XSL/Transform}NODESET) -> com.sun.org.apache.xml.internal.dtm.ref.DTMNodeList@4229bb3f
~~~~~~~~~~~~~~org/apache/ibatis/parsing/XPathParser.evalNodes([select: null],"selectKey") -> []
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.evalNodes("selectKey") -> []
~~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLStatementBuilder.parseSelectKeyNodes("getStudent",[],null,org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec,null)
~~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLStatementBuilder.parseSelectKeyNodes("getStudent",[],null,org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec,null) -> void
~~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLStatementBuilder.removeSelectKeyNodes([])
~~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLStatementBuilder.removeSelectKeyNodes([]) -> void
~~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLStatementBuilder.processSelectKeyNodes("getStudent",null,org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec) -> void
~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.applyCurrentNamespace("getStudent!selectKey",true)
~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.applyCurrentNamespace("getStudent!selectKey",true) -> org.apache.ibatis.demo.StudentMapper.getStudent!selectKey
~~~~~~~~~~~~org/apache/ibatis/session/Configuration.hasKeyGenerator("org.apache.ibatis.demo.StudentMapper.getStudent!selectKey")
~~~~~~~~~~~~org/apache/ibatis/session/Configuration.hasKeyGenerator("org.apache.ibatis.demo.StudentMapper.getStudent!selectKey") -> false
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBooleanAttribute("useGeneratedKeys",false)
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBooleanAttribute("useGeneratedKeys",false) -> false
~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/XMLLanguageDriver.createSqlSource(org.apache.ibatis.session.Configuration@20ccf40b,<select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
,null)
~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.initNodeHandlerMap()
~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.initNodeHandlerMap() -> void
~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.parseScriptNode()
~~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.parseDynamicTags(<select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
)
~~~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.newXNode([#text: 
		select * from student where id = #{id}
	])
~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([#text: 
		select * from student where id = #{id}
	])
~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([#text: 
		select * from student where id = #{id}
	]) -> {}
~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([#text: 
		select * from student where id = #{id}
	])
~~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		select * from student where id = #{id}
	])
~~~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		select * from student where id = #{id}
	",null)
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	")
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	") -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		select * from student where id = #{id}
	",null) -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		select * from student where id = #{id}
	]) -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([#text: 
		select * from student where id = #{id}
	]) -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.newXNode([#text: 
		select * from student where id = #{id}
	]) -> <#text>
		select * from student where id = #{id}
	</#text>

~~~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringBody("")
~~~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringBody("") -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/TextSqlNode.createParser(org.apache.ibatis.scripting.xmltags.TextSqlNode$DynamicCheckerTokenParser@1af2d44a)
~~~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/TextSqlNode.createParser(org.apache.ibatis.scripting.xmltags.TextSqlNode$DynamicCheckerTokenParser@1af2d44a) -> org.apache.ibatis.parsing.GenericTokenParser@18d87d80
~~~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	")
~~~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	") -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.parseDynamicTags(<select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
) -> org.apache.ibatis.scripting.xmltags.MixedSqlNode@543588e6
~~~~~~~~~~~~~~org/apache/ibatis/scripting/defaults/RawSqlSource.getSql(org.apache.ibatis.session.Configuration@20ccf40b,org.apache.ibatis.scripting.xmltags.MixedSqlNode@543588e6)
~~~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/MixedSqlNode.apply(org.apache.ibatis.scripting.xmltags.DynamicContext@5d534f5d)
~~~~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/MixedSqlNode.lambda$0(org.apache.ibatis.scripting.xmltags.DynamicContext@5d534f5d,org.apache.ibatis.scripting.xmltags.StaticTextSqlNode@70e9c95d)
~~~~~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/StaticTextSqlNode.apply(org.apache.ibatis.scripting.xmltags.DynamicContext@5d534f5d)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/DynamicContext.appendSql("
		select * from student where id = #{id}
	")
~~~~~~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/DynamicContext.appendSql("
		select * from student where id = #{id}
	") -> void
~~~~~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/StaticTextSqlNode.apply(org.apache.ibatis.scripting.xmltags.DynamicContext@5d534f5d) -> true
~~~~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/MixedSqlNode.lambda$0(org.apache.ibatis.scripting.xmltags.DynamicContext@5d534f5d,org.apache.ibatis.scripting.xmltags.StaticTextSqlNode@70e9c95d) -> void
~~~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/MixedSqlNode.apply(org.apache.ibatis.scripting.xmltags.DynamicContext@5d534f5d) -> true
~~~~~~~~~~~~~~org/apache/ibatis/scripting/defaults/RawSqlSource.getSql(org.apache.ibatis.session.Configuration@20ccf40b,org.apache.ibatis.scripting.xmltags.MixedSqlNode@543588e6) -> select * from student where id = #{id}
~~~~~~~~~~~~~~org/apache/ibatis/builder/SqlSourceBuilder.parse("select * from student where id = #{id}",class java.lang.Object,{})
~~~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.newMetaObject({})
~~~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.newMetaObject({}) -> org.apache.ibatis.reflection.MetaObject@51c668e3
~~~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("select * from student where id = #{id}")
~~~~~~~~~~~~~~~~org/apache/ibatis/builder/SqlSourceBuilder$ParameterMappingTokenHandler.handleToken("id")
~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/SqlSourceBuilder$ParameterMappingTokenHandler.buildParameterMapping("id")
~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/SqlSourceBuilder$ParameterMappingTokenHandler.parseParameterMapping("id")
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.parse("id")
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.skipWS("id",0)
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.skipWS("id",0) -> 0
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.property("id",0)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.skipUntil("id",0,",:")
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.skipUntil("id",0,",:") -> 2
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.trimmedStr("id",0,2)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.trimmedStr("id",0,2) -> id
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.jdbcTypeOpt("id",2)
~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.skipWS("id",2)
~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.skipWS("id",2) -> 2
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.jdbcTypeOpt("id",2) -> void
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.property("id",0) -> void
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/ParameterExpression.parse("id") -> void
~~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/SqlSourceBuilder$ParameterMappingTokenHandler.parseParameterMapping("id") -> {property=id}
~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.Object)
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.Object,null)
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Object,null)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.Object)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.Object) -> {null=class java.lang.Object, ARRAY=class java.lang.Object, OTHER=class java.lang.Object}
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Object,null) -> class java.lang.Object
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.Object,null) -> true
~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.Object) -> true
~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$1(ParameterMapping{property='null', mode=null, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'},org.apache.ibatis.session.Configuration@20ccf40b)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$1(ParameterMapping{property='null', mode=null, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'},org.apache.ibatis.session.Configuration@20ccf40b) -> void
~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$2(ParameterMapping{property='null', mode=null, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'},"id")
~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$2(ParameterMapping{property='id', mode=null, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'},"id") -> void
~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$5(ParameterMapping{property='id', mode=null, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'},class java.lang.Object)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$5(ParameterMapping{property='id', mode=null, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'},class java.lang.Object) -> void
~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$4(ParameterMapping{property='id', mode=null, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'},IN)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$4(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'},IN) -> void
~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping$Builder.build()
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping$Builder.resolveTypeHandler()
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$14(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'})
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$14(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}) -> null
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$11(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'})
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$11(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}) -> class java.lang.Object
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$16(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'})
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$16(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}) -> org.apache.ibatis.session.Configuration@20ccf40b
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$11(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'})
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$11(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}) -> class java.lang.Object
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$15(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'})
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$15(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}) -> null
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Object,null)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Object,null)
~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.Object)
~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.Object) -> {null=class java.lang.Object, ARRAY=class java.lang.Object, OTHER=class java.lang.Object}
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Object,null) -> class java.lang.Object
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Object,null) -> class java.lang.Object
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$3(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'},class java.lang.Object)
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$3(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'},class java.lang.Object) -> void
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping$Builder.resolveTypeHandler() -> void
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping$Builder.validate()
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$11(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'})
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$11(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}) -> class java.lang.Object
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$14(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'})
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping.access$14(ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}) -> class java.lang.Object
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping$Builder.validate() -> void
~~~~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMapping$Builder.build() -> ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}
~~~~~~~~~~~~~~~~~org/apache/ibatis/builder/SqlSourceBuilder$ParameterMappingTokenHandler.buildParameterMapping("id") -> ParameterMapping{property='id', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}
~~~~~~~~~~~~~~~~org/apache/ibatis/builder/SqlSourceBuilder$ParameterMappingTokenHandler.handleToken("id") -> ?
~~~~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("select * from student where id = #{id}") -> select * from student where id = ?
~~~~~~~~~~~~~~org/apache/ibatis/builder/SqlSourceBuilder.parse("select * from student where id = #{id}",class java.lang.Object,{}) -> org.apache.ibatis.builder.StaticSqlSource@5824a83d
~~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.parseScriptNode() -> org.apache.ibatis.scripting.defaults.RawSqlSource@537f60bf
~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/XMLLanguageDriver.createSqlSource(org.apache.ibatis.session.Configuration@20ccf40b,<select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
,null) -> org.apache.ibatis.scripting.defaults.RawSqlSource@537f60bf
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("statementType","PREPARED")
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("statementType","PREPARED") -> PREPARED
~~~~~~~~~~~~org/apache/ibatis/mapping/StatementType.valueOf("PREPARED")
~~~~~~~~~~~~~org/apache/ibatis/mapping/StatementType.values()
~~~~~~~~~~~~~org/apache/ibatis/mapping/StatementType.values() -> [Lorg.apache.ibatis.mapping.StatementType;@18df8434
~~~~~~~~~~~~org/apache/ibatis/mapping/StatementType.valueOf("PREPARED") -> PREPARED
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getIntAttribute("fetchSize")
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getIntAttribute("fetchSize",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getIntAttribute("fetchSize",null) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getIntAttribute("fetchSize") -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getIntAttribute("timeout")
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getIntAttribute("timeout",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getIntAttribute("timeout",null) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getIntAttribute("timeout") -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("parameterMap")
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("parameterMap",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("parameterMap",null) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("parameterMap") -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultType")
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultType",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultType",null) -> org.apache.ibatis.demo.Student
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultType") -> org.apache.ibatis.demo.Student
~~~~~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass("org.apache.ibatis.demo.Student")
~~~~~~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveAlias("org.apache.ibatis.demo.Student")
~~~~~~~~~~~~~~org/apache/ibatis/type/TypeAliasRegistry.resolveAlias("org.apache.ibatis.demo.Student")
~~~~~~~~~~~~~~~org/apache/ibatis/io/Resources.classForName("org.apache.ibatis.demo.Student")
~~~~~~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("org.apache.ibatis.demo.Student")
~~~~~~~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null)
~~~~~~~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null) -> [Ljava.lang.ClassLoader;@65c7a252
~~~~~~~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("org.apache.ibatis.demo.Student",java.lang.ClassLoader[])
~~~~~~~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("org.apache.ibatis.demo.Student",java.lang.ClassLoader[]) -> class org.apache.ibatis.demo.Student
~~~~~~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("org.apache.ibatis.demo.Student") -> class org.apache.ibatis.demo.Student
~~~~~~~~~~~~~~~org/apache/ibatis/io/Resources.classForName("org.apache.ibatis.demo.Student") -> class org.apache.ibatis.demo.Student
~~~~~~~~~~~~~~org/apache/ibatis/type/TypeAliasRegistry.resolveAlias("org.apache.ibatis.demo.Student") -> class org.apache.ibatis.demo.Student
~~~~~~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveAlias("org.apache.ibatis.demo.Student") -> class org.apache.ibatis.demo.Student
~~~~~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveClass("org.apache.ibatis.demo.Student") -> class org.apache.ibatis.demo.Student
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultMap")
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultMap",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultMap",null) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultMap") -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultSetType")
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultSetType",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultSetType",null) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultSetType") -> null
~~~~~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveResultSetType(null)
~~~~~~~~~~~~org/apache/ibatis/builder/BaseBuilder.resolveResultSetType(null) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("keyProperty")
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("keyProperty",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("keyProperty",null) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("keyProperty") -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("keyColumn")
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("keyColumn",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("keyColumn",null) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("keyColumn") -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultSets")
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultSets",null)
~~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultSets",null) -> null
~~~~~~~~~~~~org/apache/ibatis/parsing/XNode.getStringAttribute("resultSets") -> null
~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.addMappedStatement("getStudent",org.apache.ibatis.scripting.defaults.RawSqlSource@537f60bf,PREPARED,SELECT,null,null,null,null,null,class org.apache.ibatis.demo.Student,null,false,true,false,org.apache.ibatis.executor.keygen.NoKeyGenerator@229c6181,null,null,null,org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec,null)
~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.applyCurrentNamespace("getStudent",false)
~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.applyCurrentNamespace("getStudent",false) -> org.apache.ibatis.demo.StudentMapper.getStudent
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$0(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.session.Configuration@20ccf40b)
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$0(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.session.Configuration@20ccf40b) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$1(org.apache.ibatis.mapping.MappedStatement@1e0b4072,"org.apache.ibatis.demo.StudentMapper.getStudent")
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$1(org.apache.ibatis.mapping.MappedStatement@1e0b4072,"org.apache.ibatis.demo.StudentMapper.getStudent") -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$2(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.scripting.defaults.RawSqlSource@537f60bf)
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$2(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.scripting.defaults.RawSqlSource@537f60bf) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$3(org.apache.ibatis.mapping.MappedStatement@1e0b4072,PREPARED)
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$3(org.apache.ibatis.mapping.MappedStatement@1e0b4072,PREPARED) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$4(org.apache.ibatis.mapping.MappedStatement@1e0b4072,DEFAULT)
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$4(org.apache.ibatis.mapping.MappedStatement@1e0b4072,DEFAULT) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMap.access$1(org.apache.ibatis.mapping.ParameterMap@4b45a2f5,"defaultParameterMap")
~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMap.access$1(org.apache.ibatis.mapping.ParameterMap@4b45a2f5,"defaultParameterMap") -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMap.access$2(org.apache.ibatis.mapping.ParameterMap@4b45a2f5,null)
~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMap.access$2(org.apache.ibatis.mapping.ParameterMap@4b45a2f5,null) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMap.access$3(org.apache.ibatis.mapping.ParameterMap@4b45a2f5,[])
~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMap.access$3(org.apache.ibatis.mapping.ParameterMap@4b45a2f5,[]) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMap$Builder.build()
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMap.access$5(org.apache.ibatis.mapping.ParameterMap@4b45a2f5)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMap.access$5(org.apache.ibatis.mapping.ParameterMap@4b45a2f5) -> []
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMap.access$3(org.apache.ibatis.mapping.ParameterMap@4b45a2f5,[])
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMap.access$3(org.apache.ibatis.mapping.ParameterMap@4b45a2f5,[]) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/ParameterMap$Builder.build() -> org.apache.ibatis.mapping.ParameterMap@4b45a2f5
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$5(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.mapping.ParameterMap@4b45a2f5)
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$5(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.mapping.ParameterMap@4b45a2f5) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$6(org.apache.ibatis.mapping.MappedStatement@1e0b4072,[])
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$6(org.apache.ibatis.mapping.MappedStatement@1e0b4072,[]) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$7(org.apache.ibatis.mapping.MappedStatement@1e0b4072,SELECT)
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$7(org.apache.ibatis.mapping.MappedStatement@1e0b4072,SELECT) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$8(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.executor.keygen.NoKeyGenerator@229c6181)
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$8(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.executor.keygen.NoKeyGenerator@229c6181) -> void
~~~~~~~~~~~~~org/apache/ibatis/logging/LogFactory.getLog("org.apache.ibatis.demo.StudentMapper.getStudent")
~~~~~~~~~~~~~org/apache/ibatis/logging/LogFactory.getLog("org.apache.ibatis.demo.StudentMapper.getStudent") -> org.apache.ibatis.logging.slf4j.Slf4jImpl@f09733f
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$9(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.logging.slf4j.Slf4jImpl@f09733f)
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$9(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.logging.slf4j.Slf4jImpl@f09733f) -> void
~~~~~~~~~~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.getDriver(class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver)
~~~~~~~~~~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.getDriver(class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver) -> org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$10(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec)
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$10(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.resource("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$11(org.apache.ibatis.mapping.MappedStatement@1e0b4072,"org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$11(org.apache.ibatis.mapping.MappedStatement@1e0b4072,"org/apache/ibatis/demo/StudentMapper.xml") -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.resource("org/apache/ibatis/demo/StudentMapper.xml") -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.fetchSize(null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$15(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$15(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.fetchSize(null) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.timeout(null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$16(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$16(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.timeout(null) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.statementType(PREPARED)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$3(org.apache.ibatis.mapping.MappedStatement@1e0b4072,PREPARED)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$3(org.apache.ibatis.mapping.MappedStatement@1e0b4072,PREPARED) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.statementType(PREPARED) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.keyGenerator(org.apache.ibatis.executor.keygen.NoKeyGenerator@229c6181)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$8(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.executor.keygen.NoKeyGenerator@229c6181)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$8(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.executor.keygen.NoKeyGenerator@229c6181) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.keyGenerator(org.apache.ibatis.executor.keygen.NoKeyGenerator@229c6181) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.keyProperty(null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$21(null)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.delimitedStringToArray(null)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.delimitedStringToArray(null) -> null
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$21(null) -> null
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$22(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$22(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.keyProperty(null) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.keyColumn(null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$21(null)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.delimitedStringToArray(null)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.delimitedStringToArray(null) -> null
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$21(null) -> null
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$23(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$23(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.keyColumn(null) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.databaseId(null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$24(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$24(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.databaseId(null) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.lang(org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$10(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$10(org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.lang(org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.resultOrdered(false)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$20(org.apache.ibatis.mapping.MappedStatement@1e0b4072,false)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$20(org.apache.ibatis.mapping.MappedStatement@1e0b4072,false) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.resultOrdered(false) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.resultSets(null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$21(null)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.delimitedStringToArray(null)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.delimitedStringToArray(null) -> null
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$21(null) -> null
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$25(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$25(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.resultSets(null) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.getStatementResultMaps(null,class org.apache.ibatis.demo.Student,"org.apache.ibatis.demo.StudentMapper.getStudent")
~~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.applyCurrentNamespace(null,true)
~~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.applyCurrentNamespace(null,true) -> null
~~~~~~~~~~~~~~org/apache/ibatis/logging/LogFactory.getLog(class org.apache.ibatis.mapping.ResultMap$Builder)
~~~~~~~~~~~~~~~org/apache/ibatis/logging/LogFactory.getLog("org.apache.ibatis.mapping.ResultMap$Builder")
~~~~~~~~~~~~~~~org/apache/ibatis/logging/LogFactory.getLog("org.apache.ibatis.mapping.ResultMap$Builder") -> org.apache.ibatis.logging.slf4j.Slf4jImpl@2794eab6
~~~~~~~~~~~~~~org/apache/ibatis/logging/LogFactory.getLog(class org.apache.ibatis.mapping.ResultMap$Builder) -> org.apache.ibatis.logging.slf4j.Slf4jImpl@2794eab6
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$1(org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.session.Configuration@20ccf40b)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$1(org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.session.Configuration@20ccf40b) -> void
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$2(org.apache.ibatis.mapping.ResultMap@45099dd3,"org.apache.ibatis.demo.StudentMapper.getStudent-Inline")
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$2(org.apache.ibatis.mapping.ResultMap@45099dd3,"org.apache.ibatis.demo.StudentMapper.getStudent-Inline") -> void
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$3(org.apache.ibatis.mapping.ResultMap@45099dd3,class org.apache.ibatis.demo.Student)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$3(org.apache.ibatis.mapping.ResultMap@45099dd3,class org.apache.ibatis.demo.Student) -> void
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$4(org.apache.ibatis.mapping.ResultMap@45099dd3,[])
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$4(org.apache.ibatis.mapping.ResultMap@45099dd3,[]) -> void
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$5(org.apache.ibatis.mapping.ResultMap@45099dd3,null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$5(org.apache.ibatis.mapping.ResultMap@45099dd3,null) -> void
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap$Builder.build()
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$8(org.apache.ibatis.mapping.ResultMap@45099dd3)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$8(org.apache.ibatis.mapping.ResultMap@45099dd3) -> org.apache.ibatis.demo.StudentMapper.getStudent-Inline
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$9(org.apache.ibatis.mapping.ResultMap@45099dd3,[])
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$9(org.apache.ibatis.mapping.ResultMap@45099dd3,[]) -> void
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$10(org.apache.ibatis.mapping.ResultMap@45099dd3,[])
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$10(org.apache.ibatis.mapping.ResultMap@45099dd3,[]) -> void
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$11(org.apache.ibatis.mapping.ResultMap@45099dd3,[])
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$11(org.apache.ibatis.mapping.ResultMap@45099dd3,[]) -> void
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$12(org.apache.ibatis.mapping.ResultMap@45099dd3,[])
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$12(org.apache.ibatis.mapping.ResultMap@45099dd3,[]) -> void
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$13(org.apache.ibatis.mapping.ResultMap@45099dd3,[])
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$13(org.apache.ibatis.mapping.ResultMap@45099dd3,[]) -> void
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$14(org.apache.ibatis.mapping.ResultMap@45099dd3)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$14(org.apache.ibatis.mapping.ResultMap@45099dd3) -> []
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$23(org.apache.ibatis.mapping.ResultMap@45099dd3)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$23(org.apache.ibatis.mapping.ResultMap@45099dd3) -> []
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$23(org.apache.ibatis.mapping.ResultMap@45099dd3)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$23(org.apache.ibatis.mapping.ResultMap@45099dd3) -> []
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$14(org.apache.ibatis.mapping.ResultMap@45099dd3)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$14(org.apache.ibatis.mapping.ResultMap@45099dd3) -> []
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$14(org.apache.ibatis.mapping.ResultMap@45099dd3)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$14(org.apache.ibatis.mapping.ResultMap@45099dd3) -> []
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$4(org.apache.ibatis.mapping.ResultMap@45099dd3,[])
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$4(org.apache.ibatis.mapping.ResultMap@45099dd3,[]) -> void
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$23(org.apache.ibatis.mapping.ResultMap@45099dd3)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$23(org.apache.ibatis.mapping.ResultMap@45099dd3) -> []
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$11(org.apache.ibatis.mapping.ResultMap@45099dd3,[])
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$11(org.apache.ibatis.mapping.ResultMap@45099dd3,[]) -> void
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$21(org.apache.ibatis.mapping.ResultMap@45099dd3)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$21(org.apache.ibatis.mapping.ResultMap@45099dd3) -> []
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$12(org.apache.ibatis.mapping.ResultMap@45099dd3,[])
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$12(org.apache.ibatis.mapping.ResultMap@45099dd3,[]) -> void
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$22(org.apache.ibatis.mapping.ResultMap@45099dd3)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$22(org.apache.ibatis.mapping.ResultMap@45099dd3) -> []
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$13(org.apache.ibatis.mapping.ResultMap@45099dd3,[])
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$13(org.apache.ibatis.mapping.ResultMap@45099dd3,[]) -> void
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$19(org.apache.ibatis.mapping.ResultMap@45099dd3)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$19(org.apache.ibatis.mapping.ResultMap@45099dd3) -> []
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$9(org.apache.ibatis.mapping.ResultMap@45099dd3,[])
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.access$9(org.apache.ibatis.mapping.ResultMap@45099dd3,[]) -> void
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap$Builder.build() -> org.apache.ibatis.mapping.ResultMap@45099dd3
~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.getStatementResultMaps(null,class org.apache.ibatis.demo.Student,"org.apache.ibatis.demo.StudentMapper.getStudent") -> [org.apache.ibatis.mapping.ResultMap@45099dd3]
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.resultMaps([org.apache.ibatis.mapping.ResultMap@45099dd3])
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$6(org.apache.ibatis.mapping.MappedStatement@1e0b4072,[org.apache.ibatis.mapping.ResultMap@45099dd3])
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$6(org.apache.ibatis.mapping.MappedStatement@1e0b4072,[org.apache.ibatis.mapping.ResultMap@45099dd3]) -> void
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$13(org.apache.ibatis.mapping.MappedStatement@1e0b4072)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$13(org.apache.ibatis.mapping.MappedStatement@1e0b4072) -> false
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.hasNestedResultMaps()
~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.hasNestedResultMaps() -> false
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$14(org.apache.ibatis.mapping.MappedStatement@1e0b4072,false)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$14(org.apache.ibatis.mapping.MappedStatement@1e0b4072,false) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.resultMaps([org.apache.ibatis.mapping.ResultMap@45099dd3]) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.resultSetType(null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$4(org.apache.ibatis.mapping.MappedStatement@1e0b4072,DEFAULT)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$4(org.apache.ibatis.mapping.MappedStatement@1e0b4072,DEFAULT) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.resultSetType(null) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.valueOrDefault(false,false)
~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.valueOrDefault(false,false) -> false
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.flushCacheRequired(false)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$18(org.apache.ibatis.mapping.MappedStatement@1e0b4072,false)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$18(org.apache.ibatis.mapping.MappedStatement@1e0b4072,false) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.flushCacheRequired(false) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.valueOrDefault(true,true)
~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.valueOrDefault(true,true) -> true
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.useCache(true)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$19(org.apache.ibatis.mapping.MappedStatement@1e0b4072,true)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$19(org.apache.ibatis.mapping.MappedStatement@1e0b4072,true) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.useCache(true) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.cache(null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$17(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$17(org.apache.ibatis.mapping.MappedStatement@1e0b4072,null) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.cache(null) -> org.apache.ibatis.mapping.MappedStatement$Builder@e350b40
~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.getStatementParameterMap(null,null,"org.apache.ibatis.demo.StudentMapper.getStudent")
~~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.applyCurrentNamespace(null,true)
~~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.applyCurrentNamespace(null,true) -> null
~~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.getStatementParameterMap(null,null,"org.apache.ibatis.demo.StudentMapper.getStudent") -> null
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.build()
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$29(org.apache.ibatis.mapping.MappedStatement@1e0b4072)
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$29(org.apache.ibatis.mapping.MappedStatement@1e0b4072) -> [org.apache.ibatis.mapping.ResultMap@45099dd3]
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$6(org.apache.ibatis.mapping.MappedStatement@1e0b4072,[org.apache.ibatis.mapping.ResultMap@45099dd3])
~~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement.access$6(org.apache.ibatis.mapping.MappedStatement@1e0b4072,[org.apache.ibatis.mapping.ResultMap@45099dd3]) -> void
~~~~~~~~~~~~~org/apache/ibatis/mapping/MappedStatement$Builder.build() -> org.apache.ibatis.mapping.MappedStatement@1e0b4072
~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.addMappedStatement(org.apache.ibatis.mapping.MappedStatement@1e0b4072)
~~~~~~~~~~~~~~org/apache/ibatis/session/Configuration$StrictMap.put("org.apache.ibatis.demo.StudentMapper.getStudent",org.apache.ibatis.mapping.MappedStatement@1e0b4072)
~~~~~~~~~~~~~~~org/apache/ibatis/session/Configuration$StrictMap.put("org.apache.ibatis.demo.StudentMapper.getStudent",org.apache.ibatis.mapping.MappedStatement@1e0b4072)
~~~~~~~~~~~~~~~~org/apache/ibatis/session/Configuration$StrictMap.getShortName("org.apache.ibatis.demo.StudentMapper.getStudent")
~~~~~~~~~~~~~~~~org/apache/ibatis/session/Configuration$StrictMap.getShortName("org.apache.ibatis.demo.StudentMapper.getStudent") -> getStudent
~~~~~~~~~~~~~~~org/apache/ibatis/session/Configuration$StrictMap.put("org.apache.ibatis.demo.StudentMapper.getStudent",org.apache.ibatis.mapping.MappedStatement@1e0b4072) -> null
~~~~~~~~~~~~~~org/apache/ibatis/session/Configuration$StrictMap.put("org.apache.ibatis.demo.StudentMapper.getStudent",org.apache.ibatis.mapping.MappedStatement@1e0b4072) -> null
~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.addMappedStatement(org.apache.ibatis.mapping.MappedStatement@1e0b4072) -> void
~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.addMappedStatement("org.apache.ibatis.demo.StudentMapper.getStudent",org.apache.ibatis.scripting.defaults.RawSqlSource@537f60bf,PREPARED,SELECT,null,null,null,null,null,class org.apache.ibatis.demo.Student,null,false,true,false,org.apache.ibatis.executor.keygen.NoKeyGenerator@229c6181,null,null,null,org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec,null) -> org.apache.ibatis.mapping.MappedStatement@1e0b4072
~~~~~~~~~~~org/apache/ibatis/builder/xml/XMLStatementBuilder.parseStatementNode() -> void
~~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.buildStatementFromContext([<select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
],null) -> void
~~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.buildStatementFromContext([<select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
]) -> void
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([select: null])
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("getStudent",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("getStudent")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("getStudent") -> getStudent
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("getStudent",null) -> getStudent
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org.apache.ibatis.demo.Student",null)
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org.apache.ibatis.demo.Student")
~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org.apache.ibatis.demo.Student") -> org.apache.ibatis.demo.Student
~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org.apache.ibatis.demo.Student",null) -> org.apache.ibatis.demo.Student
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([select: null]) -> {resultType=org.apache.ibatis.demo.Student, id=getStudent}
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([select: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([select: null])
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([select: null]) -> null
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		select * from student where id = #{id}
	])
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		select * from student where id = #{id}
	",null)
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	")
~~~~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		select * from student where id = #{id}
	") -> 
		select * from student where id = #{id}
	
~~~~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		select * from student where id = #{id}
	",null) -> 
		select * from student where id = #{id}
	
~~~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		select * from student where id = #{id}
	]) -> 
		select * from student where id = #{id}
	
~~~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([select: null]) -> 
		select * from student where id = #{id}
	
~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.configurationElement(<mapper namespace="org.apache.ibatis.demo.StudentMapper">
    <select resultType="org.apache.ibatis.demo.Student" id="getStudent">
		select * from student where id = #{id}
	</select>
</mapper>
) -> void
~~~~~~~~org/apache/ibatis/session/Configuration.addLoadedResource("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~org/apache/ibatis/session/Configuration.addLoadedResource("org/apache/ibatis/demo/StudentMapper.xml") -> void
~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.bindMapperForNamespace()
~~~~~~~~~org/apache/ibatis/io/Resources.classForName("org.apache.ibatis.demo.StudentMapper")
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("org.apache.ibatis.demo.StudentMapper")
~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null)
~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.getClassLoaders(null) -> [Ljava.lang.ClassLoader;@13e344d
~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("org.apache.ibatis.demo.StudentMapper",java.lang.ClassLoader[])
~~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("org.apache.ibatis.demo.StudentMapper",java.lang.ClassLoader[]) -> interface org.apache.ibatis.demo.StudentMapper
~~~~~~~~~~org/apache/ibatis/io/ClassLoaderWrapper.classForName("org.apache.ibatis.demo.StudentMapper") -> interface org.apache.ibatis.demo.StudentMapper
~~~~~~~~~org/apache/ibatis/io/Resources.classForName("org.apache.ibatis.demo.StudentMapper") -> interface org.apache.ibatis.demo.StudentMapper
~~~~~~~~~org/apache/ibatis/session/Configuration.hasMapper(interface org.apache.ibatis.demo.StudentMapper)
~~~~~~~~~~org/apache/ibatis/binding/MapperRegistry.hasMapper(interface org.apache.ibatis.demo.StudentMapper)
~~~~~~~~~~org/apache/ibatis/binding/MapperRegistry.hasMapper(interface org.apache.ibatis.demo.StudentMapper) -> false
~~~~~~~~~org/apache/ibatis/session/Configuration.hasMapper(interface org.apache.ibatis.demo.StudentMapper) -> false
~~~~~~~~~org/apache/ibatis/session/Configuration.addLoadedResource("namespace:org.apache.ibatis.demo.StudentMapper")
~~~~~~~~~org/apache/ibatis/session/Configuration.addLoadedResource("namespace:org.apache.ibatis.demo.StudentMapper") -> void
~~~~~~~~~org/apache/ibatis/session/Configuration.addMapper(interface org.apache.ibatis.demo.StudentMapper)
~~~~~~~~~~org/apache/ibatis/binding/MapperRegistry.addMapper(interface org.apache.ibatis.demo.StudentMapper)
~~~~~~~~~~~org/apache/ibatis/binding/MapperRegistry.hasMapper(interface org.apache.ibatis.demo.StudentMapper)
~~~~~~~~~~~org/apache/ibatis/binding/MapperRegistry.hasMapper(interface org.apache.ibatis.demo.StudentMapper) -> false
~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.instance()
~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.instance() -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.resource("org/apache/ibatis/demo/StudentMapper.java (best guess)")
~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.resource("org/apache/ibatis/demo/StudentMapper.java (best guess)") -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.java (best guess)
~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.parse()
~~~~~~~~~~~~org/apache/ibatis/session/Configuration.isResourceLoaded("interface org.apache.ibatis.demo.StudentMapper")
~~~~~~~~~~~~org/apache/ibatis/session/Configuration.isResourceLoaded("interface org.apache.ibatis.demo.StudentMapper") -> false
~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.loadXmlResource()
~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.isResourceLoaded("namespace:org.apache.ibatis.demo.StudentMapper")
~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.isResourceLoaded("namespace:org.apache.ibatis.demo.StudentMapper") -> true
~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.loadXmlResource() -> void
~~~~~~~~~~~~org/apache/ibatis/session/Configuration.addLoadedResource("interface org.apache.ibatis.demo.StudentMapper")
~~~~~~~~~~~~org/apache/ibatis/session/Configuration.addLoadedResource("interface org.apache.ibatis.demo.StudentMapper") -> void
~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.setCurrentNamespace("org.apache.ibatis.demo.StudentMapper")
~~~~~~~~~~~~org/apache/ibatis/builder/MapperBuilderAssistant.setCurrentNamespace("org.apache.ibatis.demo.StudentMapper") -> void
~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.parseCache()
~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.parseCache() -> void
~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.parseCacheRef()
~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.parseCacheRef() -> void
~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.parseStatement(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int))
~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.getParameterType(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int))
~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.getParameterType(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int)) -> int
~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.getLanguageDriver(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int))
~~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.getLanguageDriver(null)
~~~~~~~~~~~~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.getDriver(class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver)
~~~~~~~~~~~~~~~org/apache/ibatis/scripting/LanguageDriverRegistry.getDriver(class org.apache.ibatis.scripting.xmltags.XMLLanguageDriver) -> org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec
~~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.getLanguageDriver(null) -> org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec
~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.getLanguageDriver(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int)) -> org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec
~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.getSqlSourceFromAnnotations(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int),int,org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec)
~~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.getSqlAnnotationType(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int))
~~~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.chooseAnnotationType(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int),[interface org.apache.ibatis.annotations.Insert, interface org.apache.ibatis.annotations.Delete, interface org.apache.ibatis.annotations.Update, interface org.apache.ibatis.annotations.Select])
~~~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.chooseAnnotationType(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int),[interface org.apache.ibatis.annotations.Insert, interface org.apache.ibatis.annotations.Delete, interface org.apache.ibatis.annotations.Update, interface org.apache.ibatis.annotations.Select]) -> null
~~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.getSqlAnnotationType(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int)) -> null
~~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.getSqlProviderAnnotationType(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int))
~~~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.chooseAnnotationType(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int),[interface org.apache.ibatis.annotations.UpdateProvider, interface org.apache.ibatis.annotations.DeleteProvider, interface org.apache.ibatis.annotations.SelectProvider, interface org.apache.ibatis.annotations.InsertProvider])
~~~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.chooseAnnotationType(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int),[interface org.apache.ibatis.annotations.UpdateProvider, interface org.apache.ibatis.annotations.DeleteProvider, interface org.apache.ibatis.annotations.SelectProvider, interface org.apache.ibatis.annotations.InsertProvider]) -> null
~~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.getSqlProviderAnnotationType(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int)) -> null
~~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.getSqlSourceFromAnnotations(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int),int,org.apache.ibatis.scripting.xmltags.XMLLanguageDriver@49d904ec) -> null
~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.parseStatement(public abstract org.apache.ibatis.demo.Student org.apache.ibatis.demo.StudentMapper.getStudent(int)) -> void
~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.parsePendingMethods()
~~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.parsePendingMethods() -> void
~~~~~~~~~~~org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.parse() -> void
~~~~~~~~~~org/apache/ibatis/binding/MapperRegistry.addMapper(interface org.apache.ibatis.demo.StudentMapper) -> void
~~~~~~~~~org/apache/ibatis/session/Configuration.addMapper(interface org.apache.ibatis.demo.StudentMapper) -> void
~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.bindMapperForNamespace() -> void
~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.parsePendingResultMaps()
~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.parsePendingResultMaps() -> void
~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.parsePendingCacheRefs()
~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.parsePendingCacheRefs() -> void
~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.parsePendingStatements()
~~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.parsePendingStatements() -> void
~~~~~~~org/apache/ibatis/builder/xml/XMLMapperBuilder.parse() -> void
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml") -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null) -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null]) -> {resource=org/apache/ibatis/demo/StudentMapper.xml}
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null])
~~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null]) -> null
~~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.mapperElement(<mappers>
    <mapper resource="org/apache/ibatis/demo/StudentMapper.xml"/>    
</mappers>
) -> void
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environments: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environments: null]) -> {default=development}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environments: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environments: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environments: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		") -> 
		
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		",null) -> 
		
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		]) -> 
		
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environments: null]) -> 
		
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mappers: null])
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mappers: null]) -> {}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mappers: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mappers: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mappers: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		
		])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		
		",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		
		")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
		
		") -> 
		
		
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
		
		",null) -> 
		
		
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
		
		]) -> 
		
		
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mappers: null]) -> 
		
		
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("development") -> development
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("development",null) -> development
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([environment: null]) -> {id=development}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([environment: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
			") -> 
			
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
			",null) -> 
			
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
			]) -> 
			
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([environment: null]) -> 
			
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("JDBC") -> JDBC
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("JDBC",null) -> JDBC
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([transactionManager: null]) -> {type=JDBC}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([transactionManager: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([transactionManager: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("POOLED") -> POOLED
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("POOLED",null) -> POOLED
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([dataSource: null]) -> {type=POOLED}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([dataSource: null]) -> null
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				])
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null)
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				")
~~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("
				") -> 
				
~~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("
				",null) -> 
				
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([#text: 
				]) -> 
				
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([dataSource: null]) -> 
				
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("driver") -> driver
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("driver",null) -> driver
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("com.mysql.jdbc.Driver") -> com.mysql.jdbc.Driver
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("com.mysql.jdbc.Driver",null) -> com.mysql.jdbc.Driver
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=driver, value=com.mysql.jdbc.Driver}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("url") -> url
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("url",null) -> url
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("jdbc:mysql://127.0.0.1:3306/test") -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("jdbc:mysql://127.0.0.1:3306/test",null) -> jdbc:mysql://127.0.0.1:3306/test
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=url, value=jdbc:mysql://127.0.0.1:3306/test}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("username") -> username
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("username",null) -> username
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("root") -> root
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("root",null) -> root
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=username, value=root}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("password") -> password
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("password",null) -> password
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("") -> 
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("",null) -> 
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([property: null]) -> {name=password, value=}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([property: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null])
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null)
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.enable-default-value","false") -> false
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":")
~~~~~~~~org/apache/ibatis/parsing/PropertyParser$VariableTokenHandler.getPropertyValue("org.apache.ibatis.parsing.PropertyParser.default-value-separator",":") -> :
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~org/apache/ibatis/parsing/GenericTokenParser.parse("org/apache/ibatis/demo/StudentMapper.xml") -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~org/apache/ibatis/parsing/PropertyParser.parse("org/apache/ibatis/demo/StudentMapper.xml",null) -> org/apache/ibatis/demo/StudentMapper.xml
~~~~~~org/apache/ibatis/parsing/XNode.parseAttributes([mapper: null]) -> {resource=org/apache/ibatis/demo/StudentMapper.xml}
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null])
~~~~~~~org/apache/ibatis/parsing/XNode.getBodyData([mapper: null]) -> null
~~~~~~org/apache/ibatis/parsing/XNode.parseBody([mapper: null]) -> null
~~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.parseConfiguration(<configuration>
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>            
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.jdbc.Driver"/>                
                <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>                
                <property name="username" value="root"/>                
                <property name="password" value=""/>                
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <mapper resource="org/apache/ibatis/demo/StudentMapper.xml"/>        
    </mappers>
</configuration>
) -> void
~~~~org/apache/ibatis/builder/xml/XMLConfigBuilder.parse() -> org.apache.ibatis.session.Configuration@20ccf40b
~~~~org/apache/ibatis/session/SqlSessionFactoryBuilder.build(org.apache.ibatis.session.Configuration@20ccf40b)
~~~~org/apache/ibatis/session/SqlSessionFactoryBuilder.build(org.apache.ibatis.session.Configuration@20ccf40b) -> org.apache.ibatis.session.defaults.DefaultSqlSessionFactory@7ef82753
~~~~org/apache/ibatis/executor/ErrorContext.instance()
~~~~org/apache/ibatis/executor/ErrorContext.instance() -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.java (best guess)
~~~~org/apache/ibatis/executor/ErrorContext.reset()
~~~~org/apache/ibatis/executor/ErrorContext.reset() -> 
~~~org/apache/ibatis/session/SqlSessionFactoryBuilder.build(java.io.BufferedInputStream@7b69c6ba,null,null) -> org.apache.ibatis.session.defaults.DefaultSqlSessionFactory@7ef82753
~~org/apache/ibatis/session/SqlSessionFactoryBuilder.build(java.io.BufferedInputStream@7b69c6ba) -> org.apache.ibatis.session.defaults.DefaultSqlSessionFactory@7ef82753
~~org/apache/ibatis/session/defaults/DefaultSqlSessionFactory.openSession()
~~~org/apache/ibatis/session/defaults/DefaultSqlSessionFactory.openSessionFromDataSource(SIMPLE,null,false)
~~~~org/apache/ibatis/session/defaults/DefaultSqlSessionFactory.getTransactionFactoryFromEnvironment(org.apache.ibatis.mapping.Environment@e1de817)
~~~~org/apache/ibatis/session/defaults/DefaultSqlSessionFactory.getTransactionFactoryFromEnvironment(org.apache.ibatis.mapping.Environment@e1de817) -> org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory@43195e57
~~~~org/apache/ibatis/transaction/jdbc/JdbcTransactionFactory.newTransaction(org.apache.ibatis.datasource.pooled.PooledDataSource@5136d012,null,false)
~~~~~org/apache/ibatis/logging/LogFactory.getLog(class org.apache.ibatis.transaction.jdbc.JdbcTransaction)
~~~~~~org/apache/ibatis/logging/LogFactory.getLog("org.apache.ibatis.transaction.jdbc.JdbcTransaction")
~~~~~~org/apache/ibatis/logging/LogFactory.getLog("org.apache.ibatis.transaction.jdbc.JdbcTransaction") -> org.apache.ibatis.logging.slf4j.Slf4jImpl@202b0582
~~~~~org/apache/ibatis/logging/LogFactory.getLog(class org.apache.ibatis.transaction.jdbc.JdbcTransaction) -> org.apache.ibatis.logging.slf4j.Slf4jImpl@202b0582
~~~~org/apache/ibatis/transaction/jdbc/JdbcTransactionFactory.newTransaction(org.apache.ibatis.datasource.pooled.PooledDataSource@5136d012,null,false) -> org.apache.ibatis.transaction.jdbc.JdbcTransaction@235ecd9f
~~~~org/apache/ibatis/session/Configuration.newExecutor(org.apache.ibatis.transaction.jdbc.JdbcTransaction@235ecd9f,SIMPLE)
~~~~~org/apache/ibatis/logging/LogFactory.getLog(class org.apache.ibatis.executor.BaseExecutor)
~~~~~~org/apache/ibatis/logging/LogFactory.getLog("org.apache.ibatis.executor.BaseExecutor")
~~~~~~org/apache/ibatis/logging/LogFactory.getLog("org.apache.ibatis.executor.BaseExecutor") -> org.apache.ibatis.logging.slf4j.Slf4jImpl@1ca3b418
~~~~~org/apache/ibatis/logging/LogFactory.getLog(class org.apache.ibatis.executor.BaseExecutor) -> org.apache.ibatis.logging.slf4j.Slf4jImpl@1ca3b418
~~~~~org/apache/ibatis/executor/BaseExecutor.setExecutorWrapper(org.apache.ibatis.executor.CachingExecutor@7161d8d1)
~~~~~org/apache/ibatis/executor/BaseExecutor.setExecutorWrapper(org.apache.ibatis.executor.CachingExecutor@7161d8d1) -> void
~~~~~org/apache/ibatis/plugin/InterceptorChain.pluginAll(org.apache.ibatis.executor.CachingExecutor@7161d8d1)
~~~~~org/apache/ibatis/plugin/InterceptorChain.pluginAll(org.apache.ibatis.executor.CachingExecutor@7161d8d1) -> org.apache.ibatis.executor.CachingExecutor@7161d8d1
~~~~org/apache/ibatis/session/Configuration.newExecutor(org.apache.ibatis.transaction.jdbc.JdbcTransaction@235ecd9f,SIMPLE) -> org.apache.ibatis.executor.CachingExecutor@7161d8d1
~~~~org/apache/ibatis/executor/ErrorContext.instance()
~~~~org/apache/ibatis/executor/ErrorContext.instance() -> 
~~~~org/apache/ibatis/executor/ErrorContext.reset()
~~~~org/apache/ibatis/executor/ErrorContext.reset() -> 
~~~org/apache/ibatis/session/defaults/DefaultSqlSessionFactory.openSessionFromDataSource(SIMPLE,null,false) -> org.apache.ibatis.session.defaults.DefaultSqlSession@3a7442c7
~~org/apache/ibatis/session/defaults/DefaultSqlSessionFactory.openSession() -> org.apache.ibatis.session.defaults.DefaultSqlSession@3a7442c7
~~org/apache/ibatis/session/defaults/DefaultSqlSession.selectOne("org.apache.ibatis.demo.StudentMapper.getStudent",1)
~~~org/apache/ibatis/session/defaults/DefaultSqlSession.selectList("org.apache.ibatis.demo.StudentMapper.getStudent",1)
~~~~org/apache/ibatis/session/defaults/DefaultSqlSession.selectList("org.apache.ibatis.demo.StudentMapper.getStudent",1,org.apache.ibatis.session.RowBounds@548d708a)
~~~~~org/apache/ibatis/session/Configuration.getMappedStatement("org.apache.ibatis.demo.StudentMapper.getStudent")
~~~~~~org/apache/ibatis/session/Configuration.getMappedStatement("org.apache.ibatis.demo.StudentMapper.getStudent",true)
~~~~~~~org/apache/ibatis/session/Configuration.buildAllStatements()
~~~~~~~~org/apache/ibatis/session/Configuration.parsePendingResultMaps()
~~~~~~~~org/apache/ibatis/session/Configuration.parsePendingResultMaps() -> void
~~~~~~~org/apache/ibatis/session/Configuration.buildAllStatements() -> void
~~~~~~~org/apache/ibatis/session/Configuration$StrictMap.get("org.apache.ibatis.demo.StudentMapper.getStudent")
~~~~~~~org/apache/ibatis/session/Configuration$StrictMap.get("org.apache.ibatis.demo.StudentMapper.getStudent") -> org.apache.ibatis.mapping.MappedStatement@1e0b4072
~~~~~~org/apache/ibatis/session/Configuration.getMappedStatement("org.apache.ibatis.demo.StudentMapper.getStudent",true) -> org.apache.ibatis.mapping.MappedStatement@1e0b4072
~~~~~org/apache/ibatis/session/Configuration.getMappedStatement("org.apache.ibatis.demo.StudentMapper.getStudent") -> org.apache.ibatis.mapping.MappedStatement@1e0b4072
~~~~~org/apache/ibatis/session/defaults/DefaultSqlSession.wrapCollection(1)
~~~~~org/apache/ibatis/session/defaults/DefaultSqlSession.wrapCollection(1) -> 1
~~~~~org/apache/ibatis/executor/CachingExecutor.query(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,null)
~~~~~~org/apache/ibatis/mapping/MappedStatement.getBoundSql(1)
~~~~~~~org/apache/ibatis/scripting/defaults/RawSqlSource.getBoundSql(1)
~~~~~~~~org/apache/ibatis/builder/StaticSqlSource.getBoundSql(1)
~~~~~~~~~org/apache/ibatis/session/Configuration.newMetaObject({})
~~~~~~~~~org/apache/ibatis/session/Configuration.newMetaObject({}) -> org.apache.ibatis.reflection.MetaObject@53fb3dab
~~~~~~~~org/apache/ibatis/builder/StaticSqlSource.getBoundSql(1) -> org.apache.ibatis.mapping.BoundSql@cb0755b
~~~~~~~org/apache/ibatis/scripting/defaults/RawSqlSource.getBoundSql(1) -> org.apache.ibatis.mapping.BoundSql@cb0755b
~~~~~~org/apache/ibatis/mapping/MappedStatement.getBoundSql(1) -> org.apache.ibatis.mapping.BoundSql@cb0755b
~~~~~~org/apache/ibatis/executor/CachingExecutor.createCacheKey(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,org.apache.ibatis.mapping.BoundSql@cb0755b)
~~~~~~~org/apache/ibatis/executor/BaseExecutor.createCacheKey(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,org.apache.ibatis.mapping.BoundSql@cb0755b)
~~~~~~~~org/apache/ibatis/cache/CacheKey.update("org.apache.ibatis.demo.StudentMapper.getStudent")
~~~~~~~~org/apache/ibatis/cache/CacheKey.update("org.apache.ibatis.demo.StudentMapper.getStudent") -> void
~~~~~~~~org/apache/ibatis/cache/CacheKey.update(0)
~~~~~~~~org/apache/ibatis/cache/CacheKey.update(0) -> void
~~~~~~~~org/apache/ibatis/cache/CacheKey.update(2147483647)
~~~~~~~~org/apache/ibatis/cache/CacheKey.update(2147483647) -> void
~~~~~~~~org/apache/ibatis/cache/CacheKey.update("select * from student where id = ?")
~~~~~~~~org/apache/ibatis/cache/CacheKey.update("select * from student where id = ?") -> void
~~~~~~~~org/apache/ibatis/mapping/BoundSql.hasAdditionalParameter("id")
~~~~~~~~org/apache/ibatis/mapping/BoundSql.hasAdditionalParameter("id") -> false
~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.Integer)
~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.Integer,null)
~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Integer,null)
~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.Integer)
~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.Integer) -> {null=class java.lang.Integer}
~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Integer,null) -> class java.lang.Integer
~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.Integer,null) -> true
~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.Integer) -> true
~~~~~~~~org/apache/ibatis/cache/CacheKey.update(1)
~~~~~~~~org/apache/ibatis/cache/CacheKey.update(1) -> void
~~~~~~~~org/apache/ibatis/cache/CacheKey.update("development")
~~~~~~~~org/apache/ibatis/cache/CacheKey.update("development") -> void
~~~~~~~org/apache/ibatis/executor/BaseExecutor.createCacheKey(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,org.apache.ibatis.mapping.BoundSql@cb0755b) -> 282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development
~~~~~~org/apache/ibatis/executor/CachingExecutor.createCacheKey(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,org.apache.ibatis.mapping.BoundSql@cb0755b) -> 282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development
~~~~~~org/apache/ibatis/executor/CachingExecutor.query(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,null,282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development,org.apache.ibatis.mapping.BoundSql@cb0755b)
~~~~~~~org/apache/ibatis/executor/BaseExecutor.query(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,null,282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development,org.apache.ibatis.mapping.BoundSql@cb0755b)
~~~~~~~~org/apache/ibatis/executor/ErrorContext.instance()
~~~~~~~~org/apache/ibatis/executor/ErrorContext.instance() -> 
~~~~~~~~org/apache/ibatis/executor/ErrorContext.resource("org/apache/ibatis/demo/StudentMapper.xml")
~~~~~~~~org/apache/ibatis/executor/ErrorContext.resource("org/apache/ibatis/demo/StudentMapper.xml") -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
~~~~~~~~org/apache/ibatis/executor/ErrorContext.activity("executing a query")
~~~~~~~~org/apache/ibatis/executor/ErrorContext.activity("executing a query") -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
### The error occurred while executing a query
~~~~~~~~org/apache/ibatis/executor/ErrorContext.object("org.apache.ibatis.demo.StudentMapper.getStudent")
~~~~~~~~org/apache/ibatis/executor/ErrorContext.object("org.apache.ibatis.demo.StudentMapper.getStudent") -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
### The error may involve org.apache.ibatis.demo.StudentMapper.getStudent
### The error occurred while executing a query
~~~~~~~~org/apache/ibatis/cache/impl/PerpetualCache.getObject(282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development)
~~~~~~~~org/apache/ibatis/cache/impl/PerpetualCache.getObject(282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development) -> null
~~~~~~~~org/apache/ibatis/executor/BaseExecutor.queryFromDatabase(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,null,282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development,org.apache.ibatis.mapping.BoundSql@cb0755b)
~~~~~~~~~org/apache/ibatis/cache/impl/PerpetualCache.putObject(282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development,EXECUTION_PLACEHOLDER)
~~~~~~~~~org/apache/ibatis/cache/impl/PerpetualCache.putObject(282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development,EXECUTION_PLACEHOLDER) -> void
~~~~~~~~~org/apache/ibatis/executor/SimpleExecutor.doQuery(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,null,org.apache.ibatis.mapping.BoundSql@cb0755b)
~~~~~~~~~~org/apache/ibatis/session/Configuration.newStatementHandler(org.apache.ibatis.executor.CachingExecutor@7161d8d1,org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,null,org.apache.ibatis.mapping.BoundSql@cb0755b)
~~~~~~~~~~~org/apache/ibatis/executor/statement/RoutingStatementHandler.$SWITCH_TABLE$org$apache$ibatis$mapping$StatementType()
~~~~~~~~~~~~org/apache/ibatis/mapping/StatementType.values()
~~~~~~~~~~~~org/apache/ibatis/mapping/StatementType.values() -> [Lorg.apache.ibatis.mapping.StatementType;@1349883
~~~~~~~~~~~org/apache/ibatis/executor/statement/RoutingStatementHandler.$SWITCH_TABLE$org$apache$ibatis$mapping$StatementType() -> [I@4b29d1d2
~~~~~~~~~~~org/apache/ibatis/session/Configuration.newParameterHandler(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.mapping.BoundSql@cb0755b)
~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/XMLLanguageDriver.createParameterHandler(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.mapping.BoundSql@cb0755b)
~~~~~~~~~~~~org/apache/ibatis/scripting/xmltags/XMLLanguageDriver.createParameterHandler(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.mapping.BoundSql@cb0755b) -> org.apache.ibatis.scripting.defaults.DefaultParameterHandler@2d901eb0
~~~~~~~~~~~~org/apache/ibatis/plugin/InterceptorChain.pluginAll(org.apache.ibatis.scripting.defaults.DefaultParameterHandler@2d901eb0)
~~~~~~~~~~~~org/apache/ibatis/plugin/InterceptorChain.pluginAll(org.apache.ibatis.scripting.defaults.DefaultParameterHandler@2d901eb0) -> org.apache.ibatis.scripting.defaults.DefaultParameterHandler@2d901eb0
~~~~~~~~~~~org/apache/ibatis/session/Configuration.newParameterHandler(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.mapping.BoundSql@cb0755b) -> org.apache.ibatis.scripting.defaults.DefaultParameterHandler@2d901eb0
~~~~~~~~~~~org/apache/ibatis/session/Configuration.newResultSetHandler(org.apache.ibatis.executor.CachingExecutor@7161d8d1,org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.session.RowBounds@548d708a,org.apache.ibatis.scripting.defaults.DefaultParameterHandler@2d901eb0,null,org.apache.ibatis.mapping.BoundSql@cb0755b)
~~~~~~~~~~~~org/apache/ibatis/plugin/InterceptorChain.pluginAll(org.apache.ibatis.executor.resultset.DefaultResultSetHandler@70ed52de)
~~~~~~~~~~~~org/apache/ibatis/plugin/InterceptorChain.pluginAll(org.apache.ibatis.executor.resultset.DefaultResultSetHandler@70ed52de) -> org.apache.ibatis.executor.resultset.DefaultResultSetHandler@70ed52de
~~~~~~~~~~~org/apache/ibatis/session/Configuration.newResultSetHandler(org.apache.ibatis.executor.CachingExecutor@7161d8d1,org.apache.ibatis.mapping.MappedStatement@1e0b4072,org.apache.ibatis.session.RowBounds@548d708a,org.apache.ibatis.scripting.defaults.DefaultParameterHandler@2d901eb0,null,org.apache.ibatis.mapping.BoundSql@cb0755b) -> org.apache.ibatis.executor.resultset.DefaultResultSetHandler@70ed52de
~~~~~~~~~~~org/apache/ibatis/plugin/InterceptorChain.pluginAll(org.apache.ibatis.executor.statement.RoutingStatementHandler@496bc455)
~~~~~~~~~~~org/apache/ibatis/plugin/InterceptorChain.pluginAll(org.apache.ibatis.executor.statement.RoutingStatementHandler@496bc455) -> org.apache.ibatis.executor.statement.RoutingStatementHandler@496bc455
~~~~~~~~~~org/apache/ibatis/session/Configuration.newStatementHandler(org.apache.ibatis.executor.CachingExecutor@7161d8d1,org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,null,org.apache.ibatis.mapping.BoundSql@cb0755b) -> org.apache.ibatis.executor.statement.RoutingStatementHandler@496bc455
~~~~~~~~~~org/apache/ibatis/executor/SimpleExecutor.prepareStatement(org.apache.ibatis.executor.statement.RoutingStatementHandler@496bc455,org.apache.ibatis.logging.slf4j.Slf4jImpl@f09733f)
~~~~~~~~~~~org/apache/ibatis/executor/BaseExecutor.getConnection(org.apache.ibatis.logging.slf4j.Slf4jImpl@f09733f)
~~~~~~~~~~~~org/apache/ibatis/transaction/jdbc/JdbcTransaction.openConnection()
~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.popConnection("root","")
~~~~~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.doGetConnection("root","")
~~~~~~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.doGetConnection({user=root, password=})
~~~~~~~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.initializeDriver()
~~~~~~~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.initializeDriver() -> void
~~~~~~~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.configureConnection(com.mysql.jdbc.JDBC4Connection@4bbf6d0e)
~~~~~~~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.configureConnection(com.mysql.jdbc.JDBC4Connection@4bbf6d0e) -> void
~~~~~~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.doGetConnection({user=root, password=}) -> com.mysql.jdbc.JDBC4Connection@4bbf6d0e
~~~~~~~~~~~~~~org/apache/ibatis/datasource/unpooled/UnpooledDataSource.doGetConnection("root","") -> com.mysql.jdbc.JDBC4Connection@4bbf6d0e
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.pingConnection(org.apache.ibatis.datasource.pooled.PooledConnection@4bbf6d0e)
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.pingConnection(org.apache.ibatis.datasource.pooled.PooledConnection@4bbf6d0e) -> true
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.assembleConnectionTypeCode("jdbc:mysql://127.0.0.1:3306/test","root","")
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.assembleConnectionTypeCode("jdbc:mysql://127.0.0.1:3306/test","root","") -> -1694646903
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.setConnectionTypeCode(-1694646903)
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.setConnectionTypeCode(-1694646903) -> void
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.setCheckoutTimestamp(1584946656758)
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.setCheckoutTimestamp(1584946656758) -> void
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.setLastUsedTimestamp(1584946656768)
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.setLastUsedTimestamp(1584946656768) -> void
~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.popConnection("root","") -> org.apache.ibatis.datasource.pooled.PooledConnection@4bbf6d0e
~~~~~~~~~~~~~org/apache/ibatis/transaction/jdbc/JdbcTransaction.setDesiredAutoCommit(false)
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.checkConnection()
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.checkConnection() -> void
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.checkConnection()
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.checkConnection() -> void
~~~~~~~~~~~~~org/apache/ibatis/transaction/jdbc/JdbcTransaction.setDesiredAutoCommit(false) -> void
~~~~~~~~~~~~org/apache/ibatis/transaction/jdbc/JdbcTransaction.openConnection() -> void
~~~~~~~~~~~org/apache/ibatis/executor/BaseExecutor.getConnection(org.apache.ibatis.logging.slf4j.Slf4jImpl@f09733f) -> com.mysql.jdbc.JDBC4Connection@4bbf6d0e
~~~~~~~~~~~org/apache/ibatis/executor/statement/RoutingStatementHandler.prepare(com.mysql.jdbc.JDBC4Connection@4bbf6d0e,null)
~~~~~~~~~~~~org/apache/ibatis/executor/statement/BaseStatementHandler.prepare(com.mysql.jdbc.JDBC4Connection@4bbf6d0e,null)
~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.instance()
~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.instance() -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
### The error may involve org.apache.ibatis.demo.StudentMapper.getStudent
### The error occurred while executing a query
~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.sql("select * from student where id = ?")
~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.sql("select * from student where id = ?") -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
### The error may involve org.apache.ibatis.demo.StudentMapper.getStudent
### The error occurred while executing a query
### SQL: select * from student where id = ?
~~~~~~~~~~~~~org/apache/ibatis/executor/statement/PreparedStatementHandler.instantiateStatement(com.mysql.jdbc.JDBC4Connection@4bbf6d0e)
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.checkConnection()
~~~~~~~~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.checkConnection() -> void
~~~~~~~~~~~~~org/apache/ibatis/executor/statement/PreparedStatementHandler.instantiateStatement(com.mysql.jdbc.JDBC4Connection@4bbf6d0e) -> com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **
~~~~~~~~~~~~~org/apache/ibatis/executor/statement/BaseStatementHandler.setStatementTimeout(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **,null)
~~~~~~~~~~~~~~org/apache/ibatis/executor/statement/StatementUtil.applyTransactionTimeout(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **,null,null)
~~~~~~~~~~~~~~org/apache/ibatis/executor/statement/StatementUtil.applyTransactionTimeout(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **,null,null) -> void
~~~~~~~~~~~~~org/apache/ibatis/executor/statement/BaseStatementHandler.setStatementTimeout(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **,null) -> void
~~~~~~~~~~~~~org/apache/ibatis/executor/statement/BaseStatementHandler.setFetchSize(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **)
~~~~~~~~~~~~~org/apache/ibatis/executor/statement/BaseStatementHandler.setFetchSize(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **) -> void
~~~~~~~~~~~~org/apache/ibatis/executor/statement/BaseStatementHandler.prepare(com.mysql.jdbc.JDBC4Connection@4bbf6d0e,null) -> com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **
~~~~~~~~~~~org/apache/ibatis/executor/statement/RoutingStatementHandler.prepare(com.mysql.jdbc.JDBC4Connection@4bbf6d0e,null) -> com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **
~~~~~~~~~~~org/apache/ibatis/executor/statement/RoutingStatementHandler.parameterize(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **)
~~~~~~~~~~~~org/apache/ibatis/executor/statement/PreparedStatementHandler.parameterize(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **)
~~~~~~~~~~~~~org/apache/ibatis/scripting/defaults/DefaultParameterHandler.setParameters(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **)
~~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.instance()
~~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.instance() -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
### The error may involve org.apache.ibatis.demo.StudentMapper.getStudent
### The error occurred while executing a query
### SQL: select * from student where id = ?
~~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.activity("setting parameters")
~~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.activity("setting parameters") -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
### The error may involve org.apache.ibatis.demo.StudentMapper.getStudent
### The error occurred while setting parameters
### SQL: select * from student where id = ?
~~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.object("defaultParameterMap")
~~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.object("defaultParameterMap") -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select * from student where id = ?
~~~~~~~~~~~~~~org/apache/ibatis/mapping/BoundSql.hasAdditionalParameter("id")
~~~~~~~~~~~~~~org/apache/ibatis/mapping/BoundSql.hasAdditionalParameter("id") -> false
~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.Integer)
~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.Integer,null)
~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Integer,null)
~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.Integer)
~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.Integer) -> {null=class java.lang.Integer}
~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Integer,null) -> class java.lang.Integer
~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.Integer,null) -> true
~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.Integer) -> true
~~~~~~~~~~~~~~org/apache/ibatis/type/BaseTypeHandler.setParameter(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **,1,1,null)
~~~~~~~~~~~~~~~org/apache/ibatis/type/UnknownTypeHandler.setNonNullParameter(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **,1,1,null)
~~~~~~~~~~~~~~~~org/apache/ibatis/type/UnknownTypeHandler.resolveTypeHandler(1,null)
~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Integer,null)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Integer,null)
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.Integer)
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.Integer) -> {null=class java.lang.Integer}
~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Integer,null) -> class java.lang.Integer
~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.Integer,null) -> class java.lang.Integer
~~~~~~~~~~~~~~~~org/apache/ibatis/type/UnknownTypeHandler.resolveTypeHandler(1,null) -> class java.lang.Integer
~~~~~~~~~~~~~~~~org/apache/ibatis/type/BaseTypeHandler.setParameter(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **,1,1,null)
~~~~~~~~~~~~~~~~~org/apache/ibatis/type/IntegerTypeHandler.setNonNullParameter(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **,1,1,null)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/IntegerTypeHandler.setNonNullParameter(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = ** NOT SPECIFIED **,1,1,null)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/IntegerTypeHandler.setNonNullParameter(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1,1,1,null) -> void
~~~~~~~~~~~~~~~~~org/apache/ibatis/type/IntegerTypeHandler.setNonNullParameter(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1,1,1,null) -> void
~~~~~~~~~~~~~~~~org/apache/ibatis/type/BaseTypeHandler.setParameter(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1,1,1,null) -> void
~~~~~~~~~~~~~~~org/apache/ibatis/type/UnknownTypeHandler.setNonNullParameter(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1,1,1,null) -> void
~~~~~~~~~~~~~~org/apache/ibatis/type/BaseTypeHandler.setParameter(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1,1,1,null) -> void
~~~~~~~~~~~~~org/apache/ibatis/scripting/defaults/DefaultParameterHandler.setParameters(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1) -> void
~~~~~~~~~~~~org/apache/ibatis/executor/statement/PreparedStatementHandler.parameterize(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1) -> void
~~~~~~~~~~~org/apache/ibatis/executor/statement/RoutingStatementHandler.parameterize(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1) -> void
~~~~~~~~~~org/apache/ibatis/executor/SimpleExecutor.prepareStatement(org.apache.ibatis.executor.statement.RoutingStatementHandler@496bc455,org.apache.ibatis.logging.slf4j.Slf4jImpl@f09733f) -> com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1
~~~~~~~~~~org/apache/ibatis/executor/statement/RoutingStatementHandler.query(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1,null)
~~~~~~~~~~~org/apache/ibatis/executor/statement/PreparedStatementHandler.query(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1,null)
~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.handleResultSets(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1)
~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.instance()
~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.instance() -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select * from student where id = ?
~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.activity("handling results")
~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.activity("handling results") -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
### The error may involve defaultParameterMap
### The error occurred while handling results
### SQL: select * from student where id = ?
~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.object("org.apache.ibatis.demo.StudentMapper.getStudent")
~~~~~~~~~~~~~org/apache/ibatis/executor/ErrorContext.object("org.apache.ibatis.demo.StudentMapper.getStudent") -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
### The error may involve org.apache.ibatis.demo.StudentMapper.getStudent
### The error occurred while handling results
### SQL: select * from student where id = ?
~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.getFirstResultSet(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1)
~~~~~~~~~~~~~~org/apache/ibatis/type/JdbcType.forCode(4)
~~~~~~~~~~~~~~org/apache/ibatis/type/JdbcType.forCode(4) -> INTEGER
~~~~~~~~~~~~~~org/apache/ibatis/type/JdbcType.forCode(12)
~~~~~~~~~~~~~~org/apache/ibatis/type/JdbcType.forCode(12) -> VARCHAR
~~~~~~~~~~~~~~org/apache/ibatis/type/JdbcType.forCode(93)
~~~~~~~~~~~~~~org/apache/ibatis/type/JdbcType.forCode(93) -> TIMESTAMP
~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.getFirstResultSet(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1) -> org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5
~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.validateResultMapsCount(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,1)
~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.validateResultMapsCount(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,1) -> void
~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.handleResultSet(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,[],null)
~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.handleRowValues(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.executor.result.DefaultResultHandler@2b72cb8a,org.apache.ibatis.session.RowBounds@548d708a,null)
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.hasNestedResultMaps()
~~~~~~~~~~~~~~~org/apache/ibatis/mapping/ResultMap.hasNestedResultMaps() -> false
~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.handleRowValuesForSimpleResultMap(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.executor.result.DefaultResultHandler@2b72cb8a,org.apache.ibatis.session.RowBounds@548d708a,null)
~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.skipRows(com.mysql.jdbc.JDBC42ResultSet@5d43661b,org.apache.ibatis.session.RowBounds@548d708a)
~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.skipRows(com.mysql.jdbc.JDBC42ResultSet@5d43661b,org.apache.ibatis.session.RowBounds@548d708a) -> void
~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.shouldProcessMoreRows(org.apache.ibatis.executor.result.DefaultResultContext@12299890,org.apache.ibatis.session.RowBounds@548d708a)
~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.shouldProcessMoreRows(org.apache.ibatis.executor.result.DefaultResultContext@12299890,org.apache.ibatis.session.RowBounds@548d708a) -> true
~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.resolveDiscriminatedResultMap(com.mysql.jdbc.JDBC42ResultSet@5d43661b,org.apache.ibatis.mapping.ResultMap@45099dd3,null)
~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.resolveDiscriminatedResultMap(com.mysql.jdbc.JDBC42ResultSet@5d43661b,org.apache.ibatis.mapping.ResultMap@45099dd3,null) -> org.apache.ibatis.mapping.ResultMap@45099dd3
~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.getRowValue(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,null)
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.createResultObject(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.executor.loader.ResultLoaderMap@4bf48f6,null)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.createResultObject(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,[],[],null)
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.hasTypeHandlerForResultObject(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,class org.apache.ibatis.demo.Student)
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class org.apache.ibatis.demo.Student)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class org.apache.ibatis.demo.Student,null)
~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class org.apache.ibatis.demo.Student,null)
~~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class org.apache.ibatis.demo.Student)
~~~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMapForSuperclass(class org.apache.ibatis.demo.Student)
~~~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMapForSuperclass(class org.apache.ibatis.demo.Student) -> null
~~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class org.apache.ibatis.demo.Student) -> null
~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class org.apache.ibatis.demo.Student,null) -> null
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class org.apache.ibatis.demo.Student,null) -> false
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class org.apache.ibatis.demo.Student) -> false
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.hasTypeHandlerForResultObject(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,class org.apache.ibatis.demo.Student) -> false
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.createResultObject(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,[],[],null) -> Student [id=0, name=null]
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.hasTypeHandlerForResultObject(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,class org.apache.ibatis.demo.Student)
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class org.apache.ibatis.demo.Student)
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class org.apache.ibatis.demo.Student,null)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class org.apache.ibatis.demo.Student,null)
~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class org.apache.ibatis.demo.Student)
~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class org.apache.ibatis.demo.Student) -> null
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class org.apache.ibatis.demo.Student,null) -> null
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class org.apache.ibatis.demo.Student,null) -> false
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class org.apache.ibatis.demo.Student) -> false
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.hasTypeHandlerForResultObject(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,class org.apache.ibatis.demo.Student) -> false
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.createResultObject(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.executor.loader.ResultLoaderMap@4bf48f6,null) -> Student [id=0, name=null]
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.hasTypeHandlerForResultObject(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,class org.apache.ibatis.demo.Student)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class org.apache.ibatis.demo.Student)
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class org.apache.ibatis.demo.Student,null)
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class org.apache.ibatis.demo.Student,null)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class org.apache.ibatis.demo.Student)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class org.apache.ibatis.demo.Student) -> null
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class org.apache.ibatis.demo.Student,null) -> null
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class org.apache.ibatis.demo.Student,null) -> false
~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class org.apache.ibatis.demo.Student) -> false
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.hasTypeHandlerForResultObject(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,class org.apache.ibatis.demo.Student) -> false
~~~~~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.newMetaObject(Student [id=0, name=null])
~~~~~~~~~~~~~~~~~org/apache/ibatis/session/Configuration.newMetaObject(Student [id=0, name=null]) -> org.apache.ibatis.reflection.MetaObject@420a85c4
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.shouldApplyAutomaticMappings(org.apache.ibatis.mapping.ResultMap@45099dd3,false)
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.shouldApplyAutomaticMappings(org.apache.ibatis.mapping.ResultMap@45099dd3,false) -> true
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.applyAutomaticMappings(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.reflection.MetaObject@420a85c4,null)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.createAutomaticMappings(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.reflection.MetaObject@420a85c4,null)
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getUnmappedColumnNames(org.apache.ibatis.mapping.ResultMap@45099dd3,null)
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getMapKey(org.apache.ibatis.mapping.ResultMap@45099dd3,null)
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getMapKey(org.apache.ibatis.mapping.ResultMap@45099dd3,null) -> org.apache.ibatis.demo.StudentMapper.getStudent-Inline:null
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.loadMappedAndUnmappedColumnNames(org.apache.ibatis.mapping.ResultMap@45099dd3,null)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.prependPrefixes([],null)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.prependPrefixes([],null) -> []
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getMapKey(org.apache.ibatis.mapping.ResultMap@45099dd3,null)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getMapKey(org.apache.ibatis.mapping.ResultMap@45099dd3,null) -> org.apache.ibatis.demo.StudentMapper.getStudent-Inline:null
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getMapKey(org.apache.ibatis.mapping.ResultMap@45099dd3,null)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getMapKey(org.apache.ibatis.mapping.ResultMap@45099dd3,null) -> org.apache.ibatis.demo.StudentMapper.getStudent-Inline:null
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.loadMappedAndUnmappedColumnNames(org.apache.ibatis.mapping.ResultMap@45099dd3,null) -> void
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getMapKey(org.apache.ibatis.mapping.ResultMap@45099dd3,null)
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getMapKey(org.apache.ibatis.mapping.ResultMap@45099dd3,null) -> org.apache.ibatis.demo.StudentMapper.getStudent-Inline:null
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getUnmappedColumnNames(org.apache.ibatis.mapping.ResultMap@45099dd3,null) -> [id, name, add_time]
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getJdbcType("id")
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getJdbcType("id") -> INTEGER
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(int,INTEGER)
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(int,INTEGER)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(int)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(int) -> {null=class java.lang.Integer}
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(int,INTEGER) -> class java.lang.Integer
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(int,INTEGER) -> true
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getTypeHandler(int,"id")
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getJdbcType("id")
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getJdbcType("id") -> INTEGER
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(int,INTEGER)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(int,INTEGER)
~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(int)
~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(int) -> {null=class java.lang.Integer}
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(int,INTEGER) -> class java.lang.Integer
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(int,INTEGER) -> class java.lang.Integer
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getTypeHandler(int,"id") -> class java.lang.Integer
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getJdbcType("name")
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getJdbcType("name") -> VARCHAR
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.String,VARCHAR)
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.String,VARCHAR)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.String)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.String) -> {null=class java.lang.String, LONGVARCHAR=class java.lang.String, CHAR=class java.lang.String, NVARCHAR=class java.lang.String, VARCHAR=class java.lang.String, SQLXML=class java.lang.String, CLOB=class java.lang.String, NCHAR=class java.lang.String, NCLOB=class java.lang.String}
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.String,VARCHAR) -> class java.lang.String
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.hasTypeHandler(class java.lang.String,VARCHAR) -> true
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getTypeHandler(class java.lang.String,"name")
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getJdbcType("name")
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getJdbcType("name") -> VARCHAR
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.String,VARCHAR)
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.String,VARCHAR)
~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.String)
~~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getJdbcHandlerMap(class java.lang.String) -> {null=class java.lang.String, LONGVARCHAR=class java.lang.String, CHAR=class java.lang.String, NVARCHAR=class java.lang.String, VARCHAR=class java.lang.String, SQLXML=class java.lang.String, CLOB=class java.lang.String, NCHAR=class java.lang.String, NCLOB=class java.lang.String}
~~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.String,VARCHAR) -> class java.lang.String
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/TypeHandlerRegistry.getTypeHandler(class java.lang.String,VARCHAR) -> class java.lang.String
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getTypeHandler(class java.lang.String,"name") -> class java.lang.String
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/session/AutoMappingUnknownColumnBehavior$1.doAction(org.apache.ibatis.mapping.MappedStatement@1e0b4072,"add_time","add_time",null)
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/session/AutoMappingUnknownColumnBehavior$1.doAction(org.apache.ibatis.mapping.MappedStatement@1e0b4072,"add_time","add_time",null) -> void
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.createAutomaticMappings(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.reflection.MetaObject@420a85c4,null) -> [org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@1c852c0f, org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@a37aefe]
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler$UnMappedColumnAutoMapping.access$0(org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@1c852c0f)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler$UnMappedColumnAutoMapping.access$0(org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@1c852c0f) -> class java.lang.Integer
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler$UnMappedColumnAutoMapping.access$1(org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@1c852c0f)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler$UnMappedColumnAutoMapping.access$1(org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@1c852c0f) -> id
~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/BaseTypeHandler.getResult(com.mysql.jdbc.JDBC42ResultSet@5d43661b,"id")
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/IntegerTypeHandler.getNullableResult(com.mysql.jdbc.JDBC42ResultSet@5d43661b,"id")
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/IntegerTypeHandler.getNullableResult(com.mysql.jdbc.JDBC42ResultSet@5d43661b,"id")
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/IntegerTypeHandler.getNullableResult(com.mysql.jdbc.JDBC42ResultSet@5d43661b,"id") -> 1
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/IntegerTypeHandler.getNullableResult(com.mysql.jdbc.JDBC42ResultSet@5d43661b,"id") -> 1
~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/BaseTypeHandler.getResult(com.mysql.jdbc.JDBC42ResultSet@5d43661b,"id") -> 1
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler$UnMappedColumnAutoMapping.access$3(org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@1c852c0f)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler$UnMappedColumnAutoMapping.access$3(org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@1c852c0f) -> id
~~~~~~~~~~~~~~~~~~org/apache/ibatis/demo/Student.setId(1)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/demo/Student.setId(1) -> void
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler$UnMappedColumnAutoMapping.access$0(org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@a37aefe)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler$UnMappedColumnAutoMapping.access$0(org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@a37aefe) -> class java.lang.String
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler$UnMappedColumnAutoMapping.access$1(org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@a37aefe)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler$UnMappedColumnAutoMapping.access$1(org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@a37aefe) -> name
~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/BaseTypeHandler.getResult(com.mysql.jdbc.JDBC42ResultSet@5d43661b,"name")
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/StringTypeHandler.getNullableResult(com.mysql.jdbc.JDBC42ResultSet@5d43661b,"name")
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/StringTypeHandler.getNullableResult(com.mysql.jdbc.JDBC42ResultSet@5d43661b,"name")
~~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/StringTypeHandler.getNullableResult(com.mysql.jdbc.JDBC42ResultSet@5d43661b,"name") -> user1
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/StringTypeHandler.getNullableResult(com.mysql.jdbc.JDBC42ResultSet@5d43661b,"name") -> user1
~~~~~~~~~~~~~~~~~~org/apache/ibatis/type/BaseTypeHandler.getResult(com.mysql.jdbc.JDBC42ResultSet@5d43661b,"name") -> user1
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler$UnMappedColumnAutoMapping.access$3(org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@a37aefe)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler$UnMappedColumnAutoMapping.access$3(org.apache.ibatis.executor.resultset.DefaultResultSetHandler$UnMappedColumnAutoMapping@a37aefe) -> name
~~~~~~~~~~~~~~~~~~org/apache/ibatis/demo/Student.setName("user1")
~~~~~~~~~~~~~~~~~~org/apache/ibatis/demo/Student.setName("user1") -> void
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.applyAutomaticMappings(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.reflection.MetaObject@420a85c4,null) -> true
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.applyPropertyMappings(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.reflection.MetaObject@420a85c4,org.apache.ibatis.executor.loader.ResultLoaderMap@4bf48f6,null)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getMappedColumnNames(org.apache.ibatis.mapping.ResultMap@45099dd3,null)
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getMapKey(org.apache.ibatis.mapping.ResultMap@45099dd3,null)
~~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getMapKey(org.apache.ibatis.mapping.ResultMap@45099dd3,null) -> org.apache.ibatis.demo.StudentMapper.getStudent-Inline:null
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/ResultSetWrapper.getMappedColumnNames(org.apache.ibatis.mapping.ResultMap@45099dd3,null) -> []
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.applyPropertyMappings(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.reflection.MetaObject@420a85c4,org.apache.ibatis.executor.loader.ResultLoaderMap@4bf48f6,null) -> false
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/loader/ResultLoaderMap.size()
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/loader/ResultLoaderMap.size() -> 0
~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.getRowValue(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,null) -> Student [id=1, name=user1]
~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.storeObject(org.apache.ibatis.executor.result.DefaultResultHandler@2b72cb8a,org.apache.ibatis.executor.result.DefaultResultContext@12299890,Student [id=1, name=user1],null,com.mysql.jdbc.JDBC42ResultSet@5d43661b)
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.callResultHandler(org.apache.ibatis.executor.result.DefaultResultHandler@2b72cb8a,org.apache.ibatis.executor.result.DefaultResultContext@12299890,Student [id=1, name=user1])
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/result/DefaultResultContext.nextResultObject(Student [id=1, name=user1])
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/result/DefaultResultContext.nextResultObject(Student [id=1, name=user1]) -> void
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/result/DefaultResultHandler.handleResult(org.apache.ibatis.executor.result.DefaultResultContext@12299890)
~~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/result/DefaultResultHandler.handleResult(org.apache.ibatis.executor.result.DefaultResultContext@12299890) -> void
~~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.callResultHandler(org.apache.ibatis.executor.result.DefaultResultHandler@2b72cb8a,org.apache.ibatis.executor.result.DefaultResultContext@12299890,Student [id=1, name=user1]) -> void
~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.storeObject(org.apache.ibatis.executor.result.DefaultResultHandler@2b72cb8a,org.apache.ibatis.executor.result.DefaultResultContext@12299890,Student [id=1, name=user1],null,com.mysql.jdbc.JDBC42ResultSet@5d43661b) -> void
~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.shouldProcessMoreRows(org.apache.ibatis.executor.result.DefaultResultContext@12299890,org.apache.ibatis.session.RowBounds@548d708a)
~~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.shouldProcessMoreRows(org.apache.ibatis.executor.result.DefaultResultContext@12299890,org.apache.ibatis.session.RowBounds@548d708a) -> true
~~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.handleRowValuesForSimpleResultMap(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.executor.result.DefaultResultHandler@2b72cb8a,org.apache.ibatis.session.RowBounds@548d708a,null) -> void
~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.handleRowValues(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,org.apache.ibatis.executor.result.DefaultResultHandler@2b72cb8a,org.apache.ibatis.session.RowBounds@548d708a,null) -> void
~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.closeResultSet(com.mysql.jdbc.JDBC42ResultSet@5d43661b)
~~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.closeResultSet(com.mysql.jdbc.JDBC42ResultSet@5d43661b) -> void
~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.handleResultSet(org.apache.ibatis.executor.resultset.ResultSetWrapper@479cbee5,org.apache.ibatis.mapping.ResultMap@45099dd3,[[Student [id=1, name=user1]]],null) -> void
~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.getNextResultSet(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1)
~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.getNextResultSet(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1) -> null
~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.cleanUpAfterHandlingResultSet()
~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.cleanUpAfterHandlingResultSet() -> void
~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.collapseSingleResultList([[Student [id=1, name=user1]]])
~~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.collapseSingleResultList([[Student [id=1, name=user1]]]) -> [Student [id=1, name=user1]]
~~~~~~~~~~~~org/apache/ibatis/executor/resultset/DefaultResultSetHandler.handleResultSets(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1) -> [Student [id=1, name=user1]]
~~~~~~~~~~~org/apache/ibatis/executor/statement/PreparedStatementHandler.query(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1,null) -> [Student [id=1, name=user1]]
~~~~~~~~~~org/apache/ibatis/executor/statement/RoutingStatementHandler.query(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1,null) -> [Student [id=1, name=user1]]
~~~~~~~~~~org/apache/ibatis/executor/BaseExecutor.closeStatement(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: select * from student where id = 1)
~~~~~~~~~~org/apache/ibatis/executor/BaseExecutor.closeStatement(com.mysql.jdbc.JDBC42PreparedStatement@4d6025c5: EXCEPTION: java.sql.SQLException: No operations allowed after statement closed.) -> void
~~~~~~~~~org/apache/ibatis/executor/SimpleExecutor.doQuery(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,null,org.apache.ibatis.mapping.BoundSql@cb0755b) -> [Student [id=1, name=user1]]
~~~~~~~~~org/apache/ibatis/cache/impl/PerpetualCache.removeObject(282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development)
~~~~~~~~~org/apache/ibatis/cache/impl/PerpetualCache.removeObject(282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development) -> EXECUTION_PLACEHOLDER
~~~~~~~~~org/apache/ibatis/cache/impl/PerpetualCache.putObject(282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development,[Student [id=1, name=user1]])
~~~~~~~~~org/apache/ibatis/cache/impl/PerpetualCache.putObject(282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development,[Student [id=1, name=user1]]) -> void
~~~~~~~~org/apache/ibatis/executor/BaseExecutor.queryFromDatabase(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,null,282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development,org.apache.ibatis.mapping.BoundSql@cb0755b) -> [Student [id=1, name=user1]]
~~~~~~~org/apache/ibatis/executor/BaseExecutor.query(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,null,282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development,org.apache.ibatis.mapping.BoundSql@cb0755b) -> [Student [id=1, name=user1]]
~~~~~~org/apache/ibatis/executor/CachingExecutor.query(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,null,282169089:-1404212084:org.apache.ibatis.demo.StudentMapper.getStudent:0:2147483647:select * from student where id = ?:1:development,org.apache.ibatis.mapping.BoundSql@cb0755b) -> [Student [id=1, name=user1]]
~~~~~org/apache/ibatis/executor/CachingExecutor.query(org.apache.ibatis.mapping.MappedStatement@1e0b4072,1,org.apache.ibatis.session.RowBounds@548d708a,null) -> [Student [id=1, name=user1]]
~~~~~org/apache/ibatis/executor/ErrorContext.instance()
~~~~~org/apache/ibatis/executor/ErrorContext.instance() -> 
### The error may exist in org/apache/ibatis/demo/StudentMapper.xml
### The error may involve org.apache.ibatis.demo.StudentMapper.getStudent
### The error occurred while handling results
### SQL: select * from student where id = ?
~~~~~org/apache/ibatis/executor/ErrorContext.reset()
~~~~~org/apache/ibatis/executor/ErrorContext.reset() -> 
~~~~org/apache/ibatis/session/defaults/DefaultSqlSession.selectList("org.apache.ibatis.demo.StudentMapper.getStudent",1,org.apache.ibatis.session.RowBounds@548d708a) -> [Student [id=1, name=user1]]
~~~org/apache/ibatis/session/defaults/DefaultSqlSession.selectList("org.apache.ibatis.demo.StudentMapper.getStudent",1) -> [Student [id=1, name=user1]]
~~org/apache/ibatis/session/defaults/DefaultSqlSession.selectOne("org.apache.ibatis.demo.StudentMapper.getStudent",1) -> Student [id=1, name=user1]
~~org/apache/ibatis/session/defaults/DefaultSqlSession.close()
~~~org/apache/ibatis/session/defaults/DefaultSqlSession.isCommitOrRollbackRequired(false)
~~~org/apache/ibatis/session/defaults/DefaultSqlSession.isCommitOrRollbackRequired(false) -> false
~~~org/apache/ibatis/executor/CachingExecutor.close(false)
~~~~org/apache/ibatis/cache/TransactionalCacheManager.commit()
~~~~org/apache/ibatis/cache/TransactionalCacheManager.commit() -> void
~~~~org/apache/ibatis/executor/BaseExecutor.close(false)
~~~~~org/apache/ibatis/executor/BaseExecutor.rollback(false)
~~~~~~org/apache/ibatis/executor/BaseExecutor.clearLocalCache()
~~~~~~~org/apache/ibatis/cache/impl/PerpetualCache.clear()
~~~~~~~org/apache/ibatis/cache/impl/PerpetualCache.clear() -> void
~~~~~~~org/apache/ibatis/cache/impl/PerpetualCache.clear()
~~~~~~~org/apache/ibatis/cache/impl/PerpetualCache.clear() -> void
~~~~~~org/apache/ibatis/executor/BaseExecutor.clearLocalCache() -> void
~~~~~~org/apache/ibatis/executor/BaseExecutor.flushStatements(true)
~~~~~~~org/apache/ibatis/executor/SimpleExecutor.doFlushStatements(true)
~~~~~~~org/apache/ibatis/executor/SimpleExecutor.doFlushStatements(true) -> []
~~~~~~org/apache/ibatis/executor/BaseExecutor.flushStatements(true) -> []
~~~~~org/apache/ibatis/executor/BaseExecutor.rollback(false) -> void
~~~~~org/apache/ibatis/transaction/jdbc/JdbcTransaction.close()
~~~~~~org/apache/ibatis/transaction/jdbc/JdbcTransaction.resetAutoCommit()
~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.checkConnection()
~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.checkConnection() -> void
~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.checkConnection()
~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.checkConnection() -> void
~~~~~~org/apache/ibatis/transaction/jdbc/JdbcTransaction.resetAutoCommit() -> void
~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.pushConnection(org.apache.ibatis.datasource.pooled.PooledConnection@4bbf6d0e)
~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.pingConnection(org.apache.ibatis.datasource.pooled.PooledConnection@4bbf6d0e)
~~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.pingConnection(org.apache.ibatis.datasource.pooled.PooledConnection@4bbf6d0e) -> true
~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.setCreatedTimestamp(1584946656693)
~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.setCreatedTimestamp(1584946656693) -> void
~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.setLastUsedTimestamp(1584946656768)
~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.setLastUsedTimestamp(1584946656768) -> void
~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.invalidate()
~~~~~~~org/apache/ibatis/datasource/pooled/PooledConnection.invalidate() -> void
~~~~~~org/apache/ibatis/datasource/pooled/PooledDataSource.pushConnection(org.apache.ibatis.datasource.pooled.PooledConnection@4bbf6d0e) -> void
~~~~~org/apache/ibatis/transaction/jdbc/JdbcTransaction.close() -> void
~~~~org/apache/ibatis/executor/BaseExecutor.close(false) -> void
~~~org/apache/ibatis/executor/CachingExecutor.close(false) -> void
~~~org/apache/ibatis/session/defaults/DefaultSqlSession.closeCursors()
~~~org/apache/ibatis/session/defaults/DefaultSqlSession.closeCursors() -> void
~~~org/apache/ibatis/executor/ErrorContext.instance()
~~~org/apache/ibatis/executor/ErrorContext.instance() -> 
~~~org/apache/ibatis/executor/ErrorContext.reset()
~~~org/apache/ibatis/executor/ErrorContext.reset() -> 
~~org/apache/ibatis/session/defaults/DefaultSqlSession.close() -> void
~org/apache/ibatis/demo/StudentDao.main(java.lang.String[]) -> void
